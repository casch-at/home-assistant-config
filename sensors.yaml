- platform: template
  sensors:
    lower_kitchen_motion_sensor_temperature_fixed:
      friendly_name: "Lower Kitchen Motion Sensor Temperature Fixed"
      value_template: >-
        {{
          (states('sensor.lower_kitchen_motion_sensor_temperature') | float(0.0) + 1.8) | round(2)
        }}
      device_class: temperature
      unit_of_measurement: '°C'
      unique_id: mysensor0001
    front_floor_motion_sensor_temperature_fixed:
      friendly_name: "Front Floor Motion Sensor Temperature Fixed"
      value_template: >-
        {{
          (states('sensor.front_floor_motion_sensor_temperature') | float(0.0) + 1.8) | round(2)
        }}
      device_class: temperature
      unit_of_measurement: '°C'
      unique_id: mysensor0002
    outdoor_temperature:
      friendly_name: "Outdoor Temperature"
      value_template: >-
        {{
          state_attr('weather.home', 'temperature') | float(0.0)
        }}
      device_class: temperature
      unit_of_measurement: '°C'
      unique_id: mysensor0003
    outdoor_humidity:
      friendly_name: "Outdoor Humidity"
      value_template: >-
        {{
          state_attr('weather.home', 'humidity') | float(0.0)
        }}
      device_class: humidity
      unit_of_measurement: '%'
      unique_id: mysensor0004
    outdoor_pressure:
      friendly_name: "Outdoor Pressure"
      value_template: >-
        {{
          state_attr('weather.home', 'pressure') | int
        }}
      device_class: pressure
      unit_of_measurement: 'hPa'
      unique_id: mysensor0005
    energy_power:
      friendly_name: "Energy Power"
      value_template: >-
        {{
          states('sensor.nightstand_switch_energy_power') | int +
          states('sensor.tv_switch_energy_power') | int +
          states('sensor.desk_switch_energy_power') | int +
          states('sensor.laptop_switch_energy_power') | int +
          states('sensor.generic1_switch_energy_power') | int
        }}
      device_class: power
      unit_of_measurement: 'W'
      unique_id: mysensor0006
    energy_power_total:
      friendly_name: "Energy Power Total"
      value_template: >-
        {{
          states('sensor.nightstand_switch_energy_total') | float(0.0) +
          states('sensor.tv_switch_energy_total') | float(0.0) +
          states('sensor.desk_switch_energy_total') | float(0.0) +
          states('sensor.laptop_switch_energy_total') | float(0.0) +
          states('sensor.generic1_switch_energy_total') | float(0.0)
        }}
      device_class: power
      unit_of_measurement: 'kWh'
      unique_id: mysensor0007
    daytime_light_brightness:
      friendly_name: "Daytime Light Brightness"
      value_template: |
        {% if states('input_select.daytime') == 'Morning' or states('input_select.daytime') == 'Daytimes' -%}
          254
        {% elif states('input_select.daytime') == 'Evening' -%}
          120
        {% elif states('input_select.daytime') == 'Night' -%}
          80
        {% endif %}
      unique_id: mysensor0008
    daytime_light_color_temp:
      friendly_name: "Daytime Light Color Temp"
      value_template: |
        {% if states('input_select.daytime') == 'Morning' or states('input_select.daytime') == 'Daytimes' -%}
          180
        {% elif states('input_select.daytime') == 'Evening' -%}
          350
        {% elif states('input_select.daytime') == 'Night' -%}
          480
        {% endif %}
      unique_id: mysensor0009

- platform: time_date
  display_options:
#    - 'date_time'
#    - 'date_time_utc'
    - 'date_time_iso'
#    - 'time_utc'


- platform: apcupsd
  resources:
    - hostname
    - version
    - upsname
    - cable
    - driver
    - upsmode
    - starttime
    - model
    - status
    - linev
    - loadpct
    - bcharge
    - timeleft
    - mbattchg
    - mintimel
    - maxtime
    - sense
    - lotrans
    - hitrans
    - alarmdel
    - battv
    - lastxfer
    - numxfers
    - tonbatt
    - cumonbatt
    - xoffbatt
    - selftest
    - statflag
    - battdate
    - nominv
    - nombattv
    - nompower
    - firmware
