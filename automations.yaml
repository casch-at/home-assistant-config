- id: enough_illuminance
  alias: Enough Illuminance Light
  description: Turn off lights on enough natural illuminance light.
  trigger:
  - platform: numeric_state
    entity_id: sensor.office_light_sensor_light_level
    above: 99
    for:
      hours: 0
      minutes: 10
      seconds: 0
  condition:
  - condition: state
    entity_id: light.all_lights
    state: 'on'
  action:
  - service: light.turn_off
    target:
      entity_id: light.all_lights
    data: {}
  mode: single
- id: fire_alarm
  alias: Fire Alarm
  description: ''
  mode: parallel
  max: 10
  trigger:
  - platform: state
    entity_id: binary_sensor.office_smoke_sensor
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: binary_sensor.upstairs_smoke_sensor
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: binary_sensor.lower_kitchen_smoke_sensor
    from: 'off'
    to: 'on'
  condition:
  - condition: template
    value_template: '{{ not is_state(trigger.entity_id, "unavailable") }}'
  action:
  - service: notify.notify
    data:
      title: '{{ trigger.to_state.name }} Critical'
      message: Smoke detected
  - service: notify.persistent_notification
    data:
      title: '{{ trigger.to_state.name }} Critical'
      message: Smoke detected
- id: handy_alaram
  alias: Handy Alarm
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.christian_schwarzgruber_alarm
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: person.christian_schwarzgruber
    state: home
  action:
  - parallel:
    - if:
      - condition: numeric_state
        entity_id: sensor.bedroom_bed_left_motion_sensor_light_level
        below: 100
      - condition: state
        entity_id: light.bedroom_bed_light
        state: 'off'
      then:
      - service: script.scene_on
        data:
          scene: scene.bedroom_bed_good_morning
    - if:
      - condition: numeric_state
        entity_id: sensor.floor_motion_sensor_light_level
        below: 100
      - condition: state
        entity_id: light.kitchen_cabinet_light
        state: 'off'
      then:
      - service: scene.turn_on
        data:
          transition: 15
        target:
          entity_id: scene.kitchen_cabinet_white
    - if:
      - condition: state
        entity_id: binary_sensor.shutter_operation_to_cold_or_windy
        state: 'off'
      - condition: state
        entity_id: timer.handy_alarm_timer
        state:
        - idle
      then:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.parlor_shutter_up_relay
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.bedroom_shutter_up_relay
      - delay:
          hours: 0
          minutes: 0
          seconds: 0
          milliseconds: 600
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.bedroom_shutter_up_relay
      - service: timer.start
        data:
          duration: 0
        target:
          entity_id: timer.handy_alarm_timer
      - delay:
          hours: 0
          minutes: 0
          seconds: '{{ (states(''input_number.parlor_shutter_horizontal_open_delay'')
            | int(0) / 32) * 9}}'
          milliseconds: 0
      - if:
        - condition: state
          entity_id: weather.home
          state: sunny
        then:
        - service: switch.turn_on
          data: {}
          target:
            entity_id: switch.parlor_shutter_down_relay
        - delay:
            hours: 0
            minutes: 0
            seconds: 0
            milliseconds: 500
        - service: switch.turn_off
          data: {}
          target:
            entity_id: switch.parlor_shutter_down_relay
    - if:
      - condition: template
        value_template: '{{ trigger.entity_id == ''binary_sensor.christian_schwarzgruber_alarm''
          }}'
      then:
      - service: automation.trigger
        data:
          skip_condition: false
        target:
          entity_id: automation.home_office
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: input_boolean.alarm_enabled
    - service: shell_command.turn_on_galaxy_led
      data: {}
  mode: queued
  max: 2
- id: low_battery_level_warning
  alias: Low Battery Level Warning
  description: ''
  mode: queued
  max: 50
  trigger:
  - platform: numeric_state
    entity_id: sensor.bathroom_switch_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.bedroom_bed_left_motion_sensor_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.bedroom_bed_right_motion_sensor_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.floor_motion_sensor_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.office_multi_sensor_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.upstairs_multi_sensor_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.parlor_multi_sensor_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.bedroom_multi_sensor_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.bathroom_multi_sensor_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.entrance_door_sensor_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.terrace_door_sensor_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.office_window_sensor_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.floor_switch_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.office_switch_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.office_magic_cube_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.bedroom_christian_switch_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.bedroom_partner_switch_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.office_light_sensor_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.office_switch_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.parlor_light_sensor_battery_level
    below: 15
    for:
      minutes: 5
  condition:
  - condition: template
    value_template: "{{\n  not\n    is_state(trigger.entity_id, 'unavailable')\n  and\n
      \   states(trigger.entity_id) | int < 15\n}}"
  action:
  - service: notify.persistent_notification
    data:
      message: '{{ trigger.to_state.name }} battery level bellow {{ trigger.to_state.state
        | int + 1}} %'
      title: '{{ trigger.to_state.name }} Critical'
- id: low_illuminance
  alias: Low Illuminance Light
  description: Turn on lights on low natural illumance light.
  trigger:
  - platform: numeric_state
    entity_id: sensor.office_light_sensor_light_level
    below: 100
    for:
      hours: 0
      minutes: 1
      seconds: 0
  - platform: state
    entity_id:
    - person.christian_schwarzgruber
    from: not_home
    to: home
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - platform: state
    entity_id:
    - input_boolean.presence
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.presence
    state: 'on'
  - condition: numeric_state
    entity_id: sensor.office_light_sensor_light_level
    below: 100
  - condition: not
    conditions:
    - condition: state
      entity_id: input_select.daytime
      state: Night
  - condition: state
    entity_id: light.kitchen_cabinet_light
    state: 'off'
  action:
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.daytime
        state: Night
      - condition: state
        entity_id: input_select.daytime
        state: Evening
    then:
    - service: scene.turn_on
      data: {}
      target:
        entity_id: scene.kitchen_cabinet_night
    else:
    - service: scene.turn_on
      data: {}
      target:
        entity_id: scene.kitchen_cabinet_white
  mode: single
  max_exceeded: silent
- id: floor_motion
  alias: Floor Motion
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.floor_motion_sensor
    from: 'off'
    to: 'on'
  condition:
  - condition: or
    conditions:
    - condition: numeric_state
      entity_id: sensor.floor_motion_sensor_light_level
      below: 45
    - condition: numeric_state
      entity_id: automation.floor_motion
      above: 0
      attribute: current
  - condition: state
    entity_id: input_boolean.floor_light_active
    state: 'off'
  action:
  - service: input_number.increment
    target:
      entity_id: input_number.floor_motion_timeout_multiplier
    data: {}
  - service: light.turn_on
    data:
      brightness: '{{ states(''sensor.daytime_light_brightness'') }}'
      color_temp: '{{ states(''sensor.daytime_light_color_temp'') }}'
    target:
      entity_id: light.floor_lights
  - wait_for_trigger:
      platform: state
      entity_id: binary_sensor.floor_motion_sensor
      from: 'on'
      to: 'off'
      for: "{{\n  (states('input_number.motion_timeout') | int)\n    *\n  (states('input_number.floor_motion_timeout_multiplier')
        | int)\n}}"
  - condition: state
    entity_id: input_boolean.floor_light_active
    state: 'off'
  - service: light.turn_off
    target:
      entity_id: light.floor_lights
    data: {}
  - service: input_number.set_value
    target:
      entity_id: input_number.floor_motion_timeout_multiplier
    data:
      value: 0
  mode: restart
- id: floor_helper_motion
  alias: Floor Helper Motion
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.floor_helper_motion_sensor
    from: 'off'
    to: 'on'
  condition:
  - condition: or
    conditions:
    - condition: numeric_state
      entity_id: sensor.floor_helper_motion_sensor_light_level
      below: 55
    - condition: numeric_state
      entity_id: automation.floor_helper_motion
      above: 0
      attribute: current
  - condition: state
    entity_id: input_boolean.floor_helper_light_active
    state: 'off'
  - condition: numeric_state
    entity_id: sensor.floor_helper_motion_sensor_light_level
    below: 10
  - condition: numeric_state
    entity_id: sensor.parlor_light_sensor_light_level
    below: 10
  action:
  - if:
    - condition: state
      entity_id: input_select.daytime
      state: Night
      for:
        hours: 0
        minutes: 1
        seconds: 0
    then:
    - service: light.turn_on
      data:
        brightness: '{{ states(''sensor.daytime_light_brightness'') }}'
        color_temp: '{{ states(''sensor.daytime_light_color_temp'') }}'
      target:
        entity_id:
        - light.floor_middle_light
        - light.kitchen_cabinet_light
    - wait_for_trigger:
        platform: state
        entity_id: binary_sensor.floor_helper_motion_sensor
        from: 'on'
        to: 'off'
        for:
          hours: 0
          minutes: 2
          seconds: 0
    - condition: state
      entity_id: input_boolean.floor_helper_light_active
      state: 'off'
    - service: light.turn_off
      target:
        entity_id:
        - light.floor_middle_light
        - light.kitchen_cabinet_light
      data: {}
    else:
    - if:
      - condition: numeric_state
        entity_id: sensor.bedroom_bed_left_motion_sensor_light_level
        below: 10
      then:
      - service: input_number.increment
        target:
          entity_id: input_number.floor_helper_motion_timeout_multiplier
        data: {}
      - service: light.turn_on
        data:
          brightness: '{{ states(''sensor.daytime_light_brightness'') }}'
          color_temp: '{{ states(''sensor.daytime_light_color_temp'') }}'
        target:
          entity_id: light.floor_back_light
      - wait_for_trigger:
          platform: state
          entity_id: binary_sensor.floor_helper_motion_sensor
          from: 'on'
          to: 'off'
          for: "{{\n  (states('input_number.motion_timeout') | int)\n    *\n  (states('input_number.floor_helper_motion_timeout_multiplier')
            | int)\n}}"
      - condition: state
        entity_id: input_boolean.floor_helper_light_active
        state: 'off'
      - service: light.turn_off
        target:
          entity_id: light.floor_back_light
        data: {}
      - service: input_number.set_value
        target:
          entity_id: input_number.floor_helper_motion_timeout_multiplier
        data:
          value: 0
  mode: restart
- id: floor_light_active_state
  alias: Floor Light Reset Active State
  description: ''
  trigger:
  - platform: state
    entity_id:
    - light.floor_lights
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 1
  condition: []
  action:
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id:
      - input_boolean.floor_light_active
      - input_boolean.floor_helper_light_active
  mode: single
- id: floor_switch
  alias: Floor Switch
  description: ''
  trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: 0157c2c1971568f115955e032e5de269
  condition:
  - condition: template
    value_template: "{{\n  trigger.event.data.command in [\n    '1_single', '1_double',
      \            '1_hold',\n    '2_single', '2_double', '2_triple', '2_hold',\n
      \   '3_single',                         '3_hold',\n    '4_single', '4_double',
      '4_triple', '4_hold',\n    '5_single', '5_double', '5_triple', '5_hold',\n    '6_single',
      '6_double', '6_triple', '6_hold'\n  ]\n}}"
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "1_single" }}'
      sequence:
      - if:
        - condition: state
          entity_id: light.terrace_plants_spots_light
          state: 'off'
        then:
        - service: input_boolean.turn_on
          data: {}
          target:
            entity_id: input_boolean.terrace_light_active
        - service: light.turn_on
          data: {}
          target:
            entity_id: light.terrace_plants_spots_light
        else:
        - service: light.turn_off
          data: {}
          target:
            entity_id: light.terrace_plants_spots_light
        - service: input_boolean.turn_off
          data: {}
          target:
            entity_id: input_boolean.terrace_light_active
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "1_double" }}'
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.terrace_light_active
      - service: input_select.select_next
        target:
          entity_id: input_select.terrace_plants_spots_scenes
        data:
          cycle: true
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "1_hold" }}'
      sequence:
      - service: switch.toggle
        data: {}
        target:
          entity_id: switch.bedroom_shutter_down_relay
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "2_single" }}'
      sequence:
      - event: zha_event
        event_data:
          device_id: c2f9ff81b7a2837879fa8a92a7aa2d8e
          command: 3_single
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "2_double" }}'
      sequence:
      - event: zha_event
        event_data:
          device_id: c2f9ff81b7a2837879fa8a92a7aa2d8e
          command: 4_single
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "2_triple" }}'
      sequence:
      - event: zha_event
        event_data:
          device_id: c2f9ff81b7a2837879fa8a92a7aa2d8e
          command: 3_double
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "2_hold" }}'
      sequence:
      - service: switch.toggle
        data: {}
        target:
          entity_id: switch.bedroom_shutter_up_relay
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "3_single" }}'
      sequence:
      - service: light.toggle
        target:
          entity_id: light.office_ceiling_lights
        data: {}
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "3_hold" }}'
      sequence:
      - service: switch.toggle
        data: {}
        target:
          entity_id: switch.parlor_shutter_down_relay
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "4_single" }}'
      sequence:
      - event: zha_event
        event_data:
          device_id: 5066dc0a0d6a11eba736919d4fa21431
          command: 1_double
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "4_double" }}'
      sequence:
      - event: zha_event
        event_data:
          device_id: 5066dc0a0d6a11eba736919d4fa21431
          command: 4_single
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "4_triple" }}'
      sequence:
      - event: zha_event
        event_data:
          device_id: 5066dc0a0d6a11eba736919d4fa21431
          command: 4_double
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "4_hold" }}'
      sequence:
      - service: switch.toggle
        data: {}
        target:
          entity_id: switch.parlor_shutter_up_relay
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "5_hold" }}'
      sequence:
      - service: script.night_light
        data: {}
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "5_single" }}'
      sequence:
      - service: light.toggle
        target:
          entity_id: light.kitchen_cabinet_light
        data: {}
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "5_double" }}'
      sequence:
      - service: input_select.select_next
        target:
          entity_id: input_select.kitchen_cabinet_scenes
        data:
          cycle: true
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "5_triple" }}'
      sequence:
      - service: switch.toggle
        data: {}
        target:
          entity_id: switch.kitchen_cabinet_switch
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "6_single" }}'
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: input_boolean.floor_light_active
            state: 'off'
          sequence:
          - service: input_boolean.turn_on
            target:
              entity_id: input_boolean.floor_light_active
            data: {}
          - service: light.turn_on
            data:
              brightness: '{{ states(''sensor.daytime_light_brightness'') }}'
              color_temp: '{{ states(''sensor.daytime_light_color_temp'') }}'
            target:
              entity_id: light.floor_lights
        default:
        - service: light.turn_off
          target:
            entity_id: light.floor_lights
          data: {}
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "6_double" }}'
      sequence:
      - service: light.toggle
        data:
          brightness: '{{ states(''sensor.daytime_light_brightness'') }}'
          color_temp: '{{ states(''sensor.daytime_light_color_temp'') }}'
        target:
          entity_id: light.floor_back_light
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "6_triple" }}'
      sequence:
      - service: light.toggle
        data: {}
        target:
          entity_id: light.panel_mirror_switch
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "6_hold" }}'
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: input_boolean.presence
            state: 'on'
          - condition: state
            entity_id: input_boolean.presence_off_running
            state: 'off'
          sequence:
          - service: input_boolean.turn_on
            target:
              entity_id: input_boolean.presence_off_running
            data: {}
          - repeat:
              count: '2'
              sequence:
              - service: light.turn_on
                data:
                  flash: long
                target:
                  entity_id: light.floor_lights
              - delay: 00:00:10
          - repeat:
              count: '2'
              sequence:
              - service: light.turn_on
                data:
                  flash: long
                target:
                  entity_id: light.floor_lights
              - delay: 00:00:05
          - service: input_boolean.turn_off
            target:
              entity_id:
              - input_boolean.presence
              - input_boolean.presence_off_running
            data: {}
        - conditions:
          - condition: state
            entity_id: input_boolean.presence_off_running
            state: 'on'
          sequence:
          - service: input_boolean.turn_off
            target:
              entity_id: input_boolean.presence_off_running
            data: {}
          - service: persistent_notification.create
            data:
              message: Presence 'off' Canceled
          - repeat:
              count: '2'
              sequence:
              - service: light.toggle
                data:
                  flash: long
                target:
                  entity_id: light.floor_lights
        - conditions:
          - condition: state
            entity_id: input_boolean.presence
            state: 'off'
          sequence:
          - service: input_boolean.turn_on
            target:
              entity_id: input_boolean.presence
            data: {}
          - repeat:
              count: '2'
              sequence:
              - service: light.toggle
                data:
                  flash: long
                target:
                  entity_id: light.kitchen_cabinet_light
        default: []
    default: []
  mode: restart
- id: presence_auto_off
  alias: Automatically Turn Presence Off
  description: ''
  trigger:
  - platform: state
    entity_id:
    - person.christian_schwarzgruber
    to: not_home
  condition: []
  action:
  - service: notify.mobile_app_phone_christian
    data:
      message: Christian is away
      data:
        tag: info
    enabled: false
  - service: input_boolean.turn_off
    target:
      entity_id: input_boolean.presence
    data: {}
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.alarm_enabled
- id: presence_everything_off
  alias: Turn Everything Off On Presence State Off
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.presence
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: automation.turn_off
    data: {}
    target:
      entity_id: automation.office_ceiling_lights_backup_kitchen_cabinet_state
  - service: homeassistant.turn_off
    target:
      entity_id:
      - light.all_lights
      - switch.devices_group
    data: {}
  - service: switch.turn_off
    target:
      entity_id:
      - switch.printer_switch
    data: {}
  - wait_template: "{{\n  is_state('device_tracker.pc01_lan_router', 'not_home') and\n
      \ is_state('device_tracker.pc01_wlan_router', 'not_home') and\n  is_state('device_tracker.lap_work_router',
      'not_home')\n}}"
    continue_on_timeout: true
    timeout: 600
  - if:
    - condition: template
      value_template: "{{\n  is_state('device_tracker.pc01_lan_router', 'not_home')
        and\n  is_state('device_tracker.pc01_wlan_router', 'not_home') and\n  is_state('device_tracker.lap_work_router',
        'not_home')\n}}"
    then:
    - service: switch.turn_off
      target:
        entity_id: switch.desk_switch
      data: {}
    - if:
      - condition: numeric_state
        entity_id: sensor.3d_printer_switch_energy_power
        below: 40
      then:
      - service: switch.turn_off
        target:
          entity_id:
          - switch.3d_printer_switch
        data: {}
  - service: switch.turn_on
    target:
      entity_id: switch.marantz_amp_power
    data: {}
  - service: automation.turn_on
    data: {}
    target:
      entity_id: automation.office_ceiling_lights_backup_kitchen_cabinet_state
  mode: single
- id: presence_person_home
  alias: Turn Presence On When Person Is At Home
  description: ''
  trigger:
  - platform: state
    entity_id: person.christian_schwarzgruber
    from: not_home
    to: home
  condition: []
  action:
  - if:
    - condition: state
      entity_id: input_boolean.presence
      state: 'off'
    then:
    - service: input_boolean.turn_on
      target:
        entity_id: input_boolean.presence
      data: {}
  - if:
    - condition: template
      value_template: '{{ trigger.entity_id == ''person.christian_schwarzgruber''
        }}'
    then:
    - service: automation.trigger
      data:
        skip_condition: false
      target:
        entity_id: automation.home_office
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.switch_always_on_group
  mode: queued
  max: 2
- id: bathroom_motion
  alias: Bathroom Motion
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.bathroom_motion_sensor
    from: 'off'
    to: 'on'
  condition:
  - condition: or
    conditions:
    - condition: numeric_state
      entity_id: sensor.bathroom_motion_sensor_light_level
      below: 38
    - condition: template
      value_template: '{% set now = now() | as_timestamp %} {% set last = state_attr(''automation.bathroom_motion'',
        ''last_triggered'') | as_timestamp %} {{ ((now - last) / 60 | int) < 6 }}'
  - condition: state
    entity_id: input_boolean.bathroom_light_active
    state: 'off'
  action:
  - service: input_number.increment
    target:
      entity_id: input_number.bathroom_motion_timeout_multiplier
    data: {}
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.daytime
        state: Daytimes
      - condition: state
        entity_id: input_select.daytime
        state: Morning
    then:
    - service: light.turn_on
      data:
        brightness: "{% if (states('sensor.daytime_light_brightness') | int + 30)
          >= 254 -%}\n  {{ states('sensor.daytime_light_brightness') }}\n{% else -%}\n
          \  {{ states('sensor.daytime_light_brightness') | int + 30 }}\n{% endif
          %}"
        color_temp: '{{ states(''sensor.daytime_light_color_temp'') }}'
      target:
        entity_id: light.bathroom_mirror_ceiling_lights
    else:
    - service: light.turn_on
      data:
        brightness: "{% if (states('sensor.daytime_light_brightness') | int + 30)
          >= 254 -%}\n  {{ states('sensor.daytime_light_brightness') }}\n{% else -%}\n
          \  {{ states('sensor.daytime_light_brightness') | int + 30 }}\n{% endif
          %}"
        color_temp: '{{ states(''sensor.daytime_light_color_temp'') }}'
      target:
        entity_id: light.bathroom_ceiling_lights
  - wait_for_trigger:
      platform: state
      entity_id: binary_sensor.bathroom_motion_sensor
      from: 'on'
      to: 'off'
      for: "{{\n  (states('input_number.motion_timeout') | int)\n    *\n  (states('input_number.bathroom_motion_timeout_multiplier')
        | int)\n}}"
  - condition: state
    entity_id: input_boolean.bathroom_light_active
    state: 'off'
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.bathroom_mirror_ceiling_lights
  - service: input_number.set_value
    target:
      entity_id: input_number.bathroom_motion_timeout_multiplier
    data:
      value: 0
  mode: restart
- id: bathroom_switch_light_reset_active_state
  alias: Bathroom Switch Light Reset Active State
  description: ''
  trigger:
  - platform: state
    entity_id:
    - light.bathroom_lights
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 3
  condition: []
  action:
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.bathroom_light_active
  mode: single
- id: bathroom_switch
  alias: Bathroom Switch
  description: ''
  trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: 5066dc0a0d6a11eba736919d4fa21431
  condition:
  - condition: template
    value_template: "{{\n  trigger.event.data.command in [\n    '1_single', '1_double',\n
      \   '2_single', '2_double',\n    '3_single', '3_double',\n    '4_single', '4_double',\n
      \ ]\n}}"
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "1_single" }}'
      sequence:
      - service: script.bathroom_light_helper
        data:
          action: call-service
          service: light.toggle
          light: light.bathroom_mirror_light_switch
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "1_double" }}'
      sequence:
      - service: script.bathroom_light_helper
        data:
          action: call-service
          service: "{% if states('light.bathroom_ceiling_lights') == 'off' or\n        states('light.bathroom_lamp_light')
            == 'off' or\n        states('light.bathroom_mirror_light') == 'off' -%}
            \n  light.turn_on\n{%- else -%}\n  light.turn_off\n{%- endif -%}"
          light: light.bathroom_lights
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "2_single" }}'
      sequence:
      - service: script.bathroom_light_helper
        data:
          action: call-service
          service: light.toggle
          light: light.bathroom_ceiling_lights
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "3_single" }}'
      sequence:
      - service: script.bathroom_light_helper
        data:
          action: call-service
          service: light.toggle
          light: light.bathroom_lamp_light
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "3_double" }}'
      sequence:
      - service: script.bathroom_light_helper
        data:
          action: call-service
          service: light.turn_on
          light: light.bathroom_lamp_light
      - service: light.turn_off
        target:
          entity_id:
          - light.bathroom_mirror_ceiling_lights
        data: {}
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "4_single" }}'
      sequence:
      - service: script.bathroom_light_helper
        data:
          action: scene
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "4_double" }}'
      sequence:
      - if:
        - condition: state
          entity_id: switch.bathroom_radiator_switch
          state: 'on'
        then:
        - service: timer.finish
          data: {}
          target:
            entity_id: timer.bathroom_radiator_timer
        else:
        - service: timer.start
          data: {}
          target:
            entity_id: timer.bathroom_radiator_timer
    default: []
  mode: queued
  max: 5
- id: daytime
  alias: Set Daytime
  description: Set daytime "Morning" (also on alarm) and "Evening" based on sun elevation
    and "Daytimes" based on lightlevel.
  mode: single
  trigger:
  - platform: numeric_state
    entity_id: sun.sun
    attribute: elevation
    above: 5
  - platform: state
    entity_id: binary_sensor.christian_schwarzgruber_alarm
    from: 'off'
    to: 'on'
  - platform: numeric_state
    entity_id: sensor.floor_motion_sensor_light_level
    above: 130
  - platform: numeric_state
    entity_id: sun.sun
    attribute: elevation
    below: 2.5
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: "{{\n    states('input_select.daytime') == 'Night'\n  and
          (\n    (trigger.entity_id == 'sun.sun' and state_attr(trigger.entity_id,
          'rising'))\n  or\n    trigger.entity_id == 'binary_sensor.christian_schwarzgruber_alarm'\n
          \ )\n}}"
      sequence:
      - service: input_select.select_option
        data:
          option: Morning
        target:
          entity_id: input_select.daytime
    - conditions:
      - condition: template
        value_template: '{{ trigger.entity_id == ''sensor.floor_motion_sensor_light_level''
          }}'
      sequence:
      - service: input_select.select_option
        data:
          option: Daytimes
        target:
          entity_id: input_select.daytime
    - conditions:
      - condition: template
        value_template: '{{ trigger.entity_id == ''sun.sun'' and not state_attr(trigger.entity_id,
          ''rising'') }}'
      sequence:
      - service: input_select.select_option
        data:
          option: Evening
        target:
          entity_id: input_select.daytime
    default: []
- id: night_mode
  alias: Night Mode
  description: ''
  trigger:
  - platform: state
    entity_id: input_select.daytime
    from: Evening
    to: Night
  condition:
  - condition: state
    entity_id: input_boolean.presence
    state: 'on'
  action:
  - if:
    - condition: state
      entity_id: binary_sensor.shutter_operation_to_cold_or_windy
      state: 'off'
    then:
    - service: switch.turn_on
      data: {}
      target:
        entity_id: switch.shutters_down_group
    enabled: false
  - service: shell_command.turn_off_galaxy_led
    data: {}
  - service: scene.turn_on
    data:
      entity_id: scene.night_toilet_light
  - service: automation.trigger
    target:
      entity_id: automation.turn_everything_off_on_presence_state_off
    data: {}
  - wait_template: '{{ states("light.bedroom_bed_light") == ''off'' }}'
    timeout: 00:00:05
    continue_on_timeout: true
  - condition: state
    entity_id: input_boolean.bedroom_bed_light_active
    state: 'off'
  - service: scene.turn_on
    data:
      entity_id: scene.night_toilet_light
  - service: light.turn_off
    data:
      transition: 100
    target:
      entity_id:
      - light.bedroom_bed_light
      - light.floor_back_light
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.alarm_enabled
  mode: single
- id: kitchen_cabinet_light_based_on_input_select_scenes
  alias: Light Based On Input Select Scenes
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.night_lights_scenes
    - input_select.office_desk_scenes
    - input_select.kitchen_cabinet_scenes
    - input_select.terrace_plants_spots_scenes
  condition: []
  action:
  - service: scene.turn_on
    data: {}
    target:
      entity_id: '{{ states(trigger.entity_id) }}'
  mode: single
- id: charge_tablet
  alias: Charge Tablet
  description: ''
  mode: single
  trigger:
  - platform: numeric_state
    entity_id: sensor.tablet_battery_level
    below: 20
  condition: []
  action:
  - service: switch.turn_on
    target:
      entity_id: switch.switch_always_on_group
- id: desk_height
  alias: Desk Height
  description: ''
  mode: restart
  trigger:
  - platform: state
    entity_id: input_number.desk_height
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: "{{\n  states('sensor.desk_control_height') | int < states('input_number.desk_height')
          | int\n}}"
      sequence:
      - service: switch.turn_off
        target:
          entity_id: switch.desk_control_button_down
      - delay:
          milliseconds: 250
      - service: switch.turn_on
        target:
          entity_id: switch.desk_control_button_up
      - wait_template: "{{\n  (states('sensor.desk_control_height') | int + 1) ==
          states('input_number.desk_height') | int\n}}"
      - service: switch.turn_off
        target:
          entity_id: switch.desk_control_button_up
    - conditions:
      - condition: template
        value_template: "{{\n  states('sensor.desk_control_height') | int > states('input_number.desk_height')
          | int\n}}"
      sequence:
      - service: switch.turn_off
        target:
          entity_id: switch.desk_control_button_up
      - delay:
          milliseconds: 250
      - service: switch.turn_on
        target:
          entity_id: switch.desk_control_button_down
      - wait_template: "{{\n  (states('sensor.desk_control_height') | int - 1) ==
          states('input_number.desk_height') | int\n}}"
      - service: switch.turn_off
        target:
          entity_id: switch.desk_control_button_down
    default: []
- id: desk_switch_turn_on
  alias: Desk Switch Turn On
  description: ''
  mode: single
  trigger:
  - platform: state
    entity_id:
    - switch.wake_on_lan_tower
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: switch.desk_switch
    state: 'off'
  action:
  - service: switch.turn_on
    target:
      entity_id: switch.desk_switch
- id: home_office
  alias: Home Office
  description: ''
  mode: single
  trigger: []
  condition:
  - condition: state
    entity_id: calendar.work_home_office
    state: 'on'
  - condition: time
    before: '17:00:00'
    after: 06:00:00
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  - condition: state
    entity_id: switch.desk_switch
    state: 'off'
  action:
  - service: switch.turn_on
    target:
      entity_id: switch.desk_switch
- id: office_low_illuminance
  alias: Office Low Illuminance Light
  description: Turn on lights on low natural illumance light.
  trigger:
  - platform: numeric_state
    entity_id: sensor.office_light_sensor_light_level
    below: 100
    for: 10
  - platform: state
    entity_id:
    - person.christian_schwarzgruber
    from: not_home
    to: home
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - platform: state
    entity_id: switch.desk_switch
    from: 'off'
    to: 'on'
  - platform: state
    entity_id:
    - input_boolean.presence
    from: 'off'
    to: 'on'
  - platform: state
    entity_id:
    - device_tracker.lap_work_router
    - device_tracker.pc01_lan_router
    - device_tracker.pc01_wlan_router
    to: home
  condition:
  - condition: numeric_state
    entity_id: sensor.office_light_sensor_light_level
    below: 100
  - condition: not
    conditions:
    - condition: state
      entity_id: input_select.daytime
      state: Night
  - condition: state
    entity_id: light.office_desk_light
    state: 'off'
  - condition: state
    entity_id: switch.desk_switch
    state: 'on'
  - condition: state
    entity_id: input_boolean.presence
    state: 'on'
  action:
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.daytime
        state: Night
    then:
    - service: scene.turn_on
      data: {}
      target:
        entity_id: scene.office_desk_night
    else:
    - service: scene.turn_on
      data: {}
      target:
        entity_id: scene.office_desk_white
  mode: single
  max_exceeded: silent
- id: magic_cube
  alias: Office Magic Cube
  description: ''
  trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: 6933643e75b1542b3b5e5e24f34d8b0b
  condition:
  - condition: template
    value_template: "{{\n  trigger.event.data.command in [\n    'shake', 'flip', 'knock',
      'rotate_left', 'rotate_right', 'slide'\n  ]\n}}"
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "shake" }}'
      sequence:
      - service: scene.turn_on
        target:
          entity_id: '{{ states("input_select.office_desk_scenes") }}'
      - service: input_select.select_next
        target:
          entity_id: input_select.office_desk_scenes
        data:
          cycle: true
    - conditions:
      - condition: template
        value_template: "{{\n    trigger.event.data.command == \"flip\"\n  and\n    trigger.event.data.args.flip_degrees
          == 90\n}}"
      - condition: state
        entity_id: binary_sensor.shutter_operation_to_cold_or_windy
        state: 'off'
      - condition: state
        entity_id: binary_sensor.office_window_sensor
        state: 'off'
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.args.activated_face == 5 }}'
          sequence:
          - service: cover.close_cover
            target:
              entity_id: cover.office_roller_shutter_left_level
            data: {}
        - conditions:
          - condition: template
            value_template: "{{\n  trigger.event.data.args.value == 96\nor\n  trigger.event.data.args.value
              == 72\n}}"
          sequence:
          - service: cover.stop_cover
            target:
              entity_id: cover.office_roller_shutter_left_level
            data: {}
        - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.args.activated_face == 2 }}'
          sequence:
          - service: cover.open_cover
            target:
              entity_id: cover.office_roller_shutter_left_level
            data: {}
        - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.args.value  == 69 }}'
          sequence:
          - service: cover.close_cover
            target:
              entity_id: cover.office_roller_shutter_right_level
            data: {}
        - conditions:
          - condition: template
            value_template: "{{\n    trigger.event.data.args.value == 80\n  or\n    trigger.event.data.args.value
              == 104\n}}"
          sequence:
          - service: cover.stop_cover
            target:
              entity_id: cover.office_roller_shutter_right_level
            data: {}
        - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.args.value == 66 }}'
          sequence:
          - service: cover.open_cover
            target:
              entity_id: cover.office_roller_shutter_right_level
            data: {}
    - conditions:
      - condition: template
        value_template: "{{\n    trigger.event.data.command == \"flip\"\n  and\n    trigger.event.data.args.flip_degrees
          == 180\n}}"
      sequence:
      - if:
        - condition: state
          entity_id: switch.desk_switch
          state: 'off'
        then:
        - service: switch.turn_on
          data: {}
          target:
            entity_id: switch.desk_switch
      - if:
        - condition: state
          entity_id: light.office_desk_light
          state: 'off'
        - condition: numeric_state
          entity_id: sensor.office_light_sensor_light_level
          below: 100
        then:
        - service: scene.turn_on
          data: {}
          target:
            entity_id: scene.office_desk_white
    - conditions:
      - condition: template
        value_template: "{{\n    trigger.event.data.command == \"knock\"\n}}"
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: light.office_desk_light
            state: 'on'
          sequence:
          - service: light.turn_off
            target:
              entity_id: light.office_desk_light
            data: {}
        default:
        - service: light.turn_on
          target:
            entity_id: light.office_desk_light
          data: {}
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "rotate_right" }}'
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: switch.desk_control_button_1
            state: 'on'
          sequence:
          - service: switch.turn_off
            target:
              entity_id:
              - switch.desk_control_button_1
            data: {}
        default:
        - service: switch.turn_off
          target:
            entity_id:
            - switch.desk_control_button_4
          data: {}
        - delay:
            milliseconds: 250
        - service: switch.turn_on
          target:
            entity_id: switch.desk_control_button_1
          data: {}
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "rotate_left" }}'
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: switch.desk_control_button_4
            state: 'on'
          sequence:
          - service: switch.turn_off
            target:
              entity_id: switch.desk_control_button_4
            data: {}
        default:
        - service: switch.turn_off
          target:
            entity_id:
            - switch.desk_control_button_1
          data: {}
        - delay:
            milliseconds: 250
        - service: switch.turn_on
          target:
            entity_id: switch.desk_control_button_4
          data: {}
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "slide" }}'
      sequence:
      - service: switch.turn_on
        target:
          entity_id: switch.marantz_amp_power
        data: {}
    default: []
  mode: restart
- id: marantz
  alias: Marantz
  description: ''
  mode: single
  trigger:
  - platform: state
    entity_id: switch.marantz_amp_power
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: input_boolean.toggle
    target:
      entity_id: input_boolean.marantz_power_state
- id: mirror_desk_height
  alias: Mirror Sensor Desk Height With Input Number Desk Height
  description: Insure input_number.desk_height gets updated when desk height changes
    without using the input_number.desk_height entity
  mode: single
  trigger:
  - platform: template
    value_template: "{{\n  states('sensor.desk_control_height') | int != states('input_number.desk_height')
      | int and\n  states('switch.desk_control_button_1') == 'off' and\n  states('switch.desk_control_button_2')
      == 'off' and\n  states('switch.desk_control_button_3') == 'off' and\n  states('switch.desk_control_button_4')
      == 'off' and\n  states('switch.desk_control_button_up') == 'off' and\n  states('switch.desk_control_button_down')
      == 'off'\n}}"
    for: 1
  condition:
  - condition: template
    value_template: "{{\n  states('sensor.desk_control_height') | int != states('input_number.desk_height')
      | int\n}}"
  action:
  - service: automation.turn_off
    target:
      entity_id: automation.desk_height
  - service: input_number.set_value
    target:
      entity_id: input_number.desk_height
    data:
      value: '{{ states(''sensor.desk_control_height'') }}'
  - service: automation.turn_on
    target:
      entity_id: automation.desk_height
- id: power_off_server
  alias: Server Off
  description: Power Off Server shortly after night mode
  trigger:
  - platform: state
    entity_id: input_select.daytime
    to: Night
    for:
      hours: 0
      minutes: 15
      seconds: 0
  condition:
  - condition: time
    before: 04:30:00
    after: '20:00:00'
  action:
  - service: switch.turn_off
    target:
      entity_id: switch.wake_on_lan_server
    data: {}
  mode: single
- id: office_switch
  alias: Office Switch
  description: ''
  mode: queued
  max: 5
  trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: 642b984be9421b3292c2416ee01bf22c
  condition:
  - condition: template
    value_template: "{{\n  trigger.event.data.command in [\n    'single', 'double',
      'hold', 'release',\n  ]\n}}"
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "single" }}'
      sequence:
      - choose:
        - conditions:
          - condition: or
            conditions:
            - condition: state
              entity_id: light.office_ceiling_lights
              state: 'off'
          sequence:
          - service: light.turn_on
            target:
              entity_id: light.office_ceiling_lights
        default:
        - service: light.turn_off
          target:
            entity_id: light.office_ceiling_lights
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "double" }}'
      sequence:
      - service: switch.turn_on
        target:
          entity_id:
          - switch.wake_on_lan_tower
          - switch.desk_switch
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "hold" }}'
      sequence:
      - choose:
        - conditions:
          - condition: or
            conditions:
            - condition: state
              entity_id: light.office_ceiling_lights
              state: 'off'
            - condition: state
              entity_id: light.office_back_light
              state: 'on'
          sequence:
          - service: light.turn_on
            target:
              entity_id:
              - light.office_front_light
          - service: light.turn_off
            target:
              entity_id:
              - light.office_back_light
        default:
        - service: light.turn_on
          target:
            entity_id:
            - light.office_back_light
        - service: light.turn_off
          target:
            entity_id:
            - light.office_front_light
- id: ups_battery_charge_critical
  alias: Ups Battery Charge Critical
  description: ''
  mode: single
  trigger:
  - platform: numeric_state
    entity_id: sensor.apcups_battery_charge
    below: 10
  condition: []
  action:
  - service: hassio.host_shutdown
- id: wake_server
  alias: Server Wake
  description: Wake Server Using WOL When state changes to Morning, Daytimes, or Evening
  trigger:
  - platform: state
    entity_id: input_select.daytime
    to: Morning
  - platform: state
    entity_id: input_select.daytime
    to: Daytimes
  - platform: state
    entity_id: input_select.daytime
    to: Evening
  condition:
  - condition: state
    entity_id: device_tracker.casch
    state: not_home
  action:
  - service: switch.turn_on
    target:
      entity_id: switch.wake_on_lan_server
    data: {}
  mode: single
- id: bedroom_motion
  alias: Bedroom Motion
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bedroom_bed_left_motion_sensor
    from: 'off'
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.bedroom_bed_right_motion_sensor
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: input_select.daytime
    state: Night
    enabled: true
  - condition: state
    entity_id: input_boolean.presence
    state: 'on'
  - condition: numeric_state
    entity_id: sensor.bedroom_bed_left_motion_sensor_light_level
    below: 50
  action:
  - service: timer.start
    data:
      duration: 0
    target:
      entity_id: timer.bedroom_motion_timer
  - condition: state
    entity_id: light.bedroom_bed_light
    state: 'off'
  - service: scene.turn_on
    data:
      entity_id: scene.night_toilet_light
  mode: restart
  max_exceeded: silent
- id: bedroom_switch
  alias: Bedroom Switch
  description: ''
  trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: c2f9ff81b7a2837879fa8a92a7aa2d8e
  - platform: event
    event_type: zha_event
    event_data:
      device_id: 2ae648159981b31b3bf901fb4ac2a579
  condition:
  - condition: template
    value_template: "{{\n  trigger.event.data.command in [\n    '1_single', '1_double',
      '1_hold',\n    '2_single', '2_double', '2_hold',\n    '3_single', '3_double',
      \            \n    '4_single', '4_double', '4_triple',\n  ]\n}}"
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "1_single" }}'
      sequence:
      - service: light.toggle
        data:
          brightness: '{{ states(''sensor.daytime_light_brightness'') | int - 70 }}'
          color_temp: '{{ states(''sensor.daytime_light_color_temp'') }}'
        target:
          entity_id: light.bedroom_nightstand_christian_light
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "1_double" }}'
      sequence:
      - service: switch.toggle
        data: {}
        target:
          entity_id: switch.bedroom_shutter_down_relay
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "1_hold" }}'
      sequence:
      - service: script.daytime_night
        data:
          light: light.bedroom_bed_light
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "2_single" }}'
      sequence:
      - service: light.toggle
        data:
          brightness: '{{ states(''sensor.daytime_light_brightness'') | int - 70 }}'
          color_temp: '{{ states(''sensor.daytime_light_color_temp'') }}'
        target:
          entity_id: light.bedroom_nightstand_partner_light
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "2_double" }}'
      sequence:
      - service: switch.toggle
        data: {}
        target:
          entity_id: switch.bedroom_shutter_up_relay
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "2_hold" }}'
      sequence:
      - service: switch.turn_on
        target:
          entity_id: switch.fan_off_switch
        data: {}
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "3_single" }}'
      sequence:
      - service: script.bedroom_bed_light_helper
        data:
          action: toggle
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "3_double" }}'
      sequence:
      - service: script.bedroom_bed_light_helper
        data:
          action: turn_on
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "4_single" }}'
      sequence:
      - service: script.bedroom_bed_light_helper
        data:
          action: scene
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "4_double" }}'
      sequence:
      - event: zha_event
        event_data:
          device_id: 0157c2c1971568f115955e032e5de269
          command: 1_double
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "4_triple" }}'
      sequence:
      - event: zha_event
        event_data:
          device_id: 0157c2c1971568f115955e032e5de269
          command: 1_single
    default: []
  mode: restart
- id: parlor_low_illuminance
  alias: Parlor Low Illuminance Light
  description: Turn on lights on low natural illumance light.
  trigger:
  - platform: numeric_state
    entity_id: sensor.office_light_sensor_light_level
    below: 60
    for:
      hours: 0
      minutes: 10
      seconds: 0
  - platform: state
    entity_id: person.christian_schwarzgruber
    from: not_home
    to: home
  - platform: state
    entity_id:
    - input_boolean.presence
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.presence
    state: 'on'
  - condition: numeric_state
    entity_id: sensor.office_light_sensor_light_level
    below: 60
  - condition: not
    conditions:
    - condition: state
      entity_id: input_select.daytime
      state: Night
  - condition: state
    entity_id: light.kitchen_cabinet_light
    state: 'off'
  action:
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.daytime
        state: Night
    then:
    - service: scene.turn_on
      data: {}
      target:
        entity_id: scene.kitchen_cabinet_night
    else:
    - service: scene.turn_on
      data: {}
      target:
        entity_id: scene.kitchen_cabinet_white
  mode: single
  max_exceeded: silent
- id: door_window_open_detection
  alias: Window Or Door Open
  description: Send notification when it is cold outside and door/window is too long
    open
  trigger:
  - platform: template
    value_template: '{{ is_state(''binary_sensor.terrace_door_sensor'', ''on'') }}'
    for: '{{ states(''input_number.window_or_door_open'') | int(0) }}'
  - platform: template
    value_template: '{{ is_state(''binary_sensor.entrance_door_sensor'', ''on'') }}'
    for: '{{ states(''input_number.window_or_door_open'') | int(0) }}'
  - platform: template
    value_template: '{{ is_state(''binary_sensor.office_window_sensor'', ''on'') }}'
    for: '{{ states(''input_number.window_or_door_open'') | int(0) }}'
  - platform: template
    value_template: '{{ is_state(''binary_sensor.parlor_window_sensor'', ''on'') }}'
    for: '{{ states(''input_number.window_or_door_open'') | int(0) }}'
  - platform: template
    value_template: '{{ is_state(''binary_sensor.lower_kitchen_window_sensor'', ''on'')
      }}'
    for: '{{ states(''input_number.window_or_door_open'') | int(0) }}'
  - platform: template
    value_template: '{{ is_state(''binary_sensor.upstairs_window_sensor'', ''on'')
      }}'
    for: '{{ states(''input_number.window_or_door_open'') | int(0) }}'
  condition:
  - condition: numeric_state
    entity_id: weather.home
    attribute: temperature
    below: 20
  - condition: not
    conditions:
    - condition: state
      entity_id: input_select.daytime
      state: Night
  action:
  - service: notify.mobile_app_all
    data:
      title: '{{ trigger.to_state.name | replace('' Sensor'', '''') }} Open'
      message: '{% set minutes = (states(''input_number.window_or_door_open'') | int(0)
        / 60) | int(0) %} The {{ trigger.to_state.name | lower | replace('' sensor'',
        '''') }} is already {{ minutes }} {% if minutes > 1 -%} minutes {% else -%}
        minute {% endif %} open.'
      data:
        tag: window-or-door-open
  - wait_template: '{{ is_state(''input_boolean.window_or_door_open'', ''off'') }}'
  - service: input_boolean.turn_on
    entity_id: input_boolean.window_or_door_open
  - condition: template
    value_template: '{{ is_state(trigger.entity_id, ''on'') }}'
  - service: scene.create
    data:
      scene_id: door_window_open_detection_kitchen_cabinet_backup
      snapshot_entities:
      - light.kitchen_cabinet_light
  - service: scene.turn_on
    data: {}
    target:
      entity_id: scene.kitchen_cabinet_red
  - wait_template: '{{ is_state(trigger.entity_id, ''off'') }}'
  - service: scene.turn_on
    data:
      entity_id: scene.door_window_open_detection_kitchen_cabinet_backup
  - service: input_boolean.turn_off
    entity_id: input_boolean.window_or_door_open
  mode: parallel
  max: 10
- id: reset_window_or_door_open_input_boolean
  alias: Window Or Door Open Reset Input Boolean
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.door_window_sensors
    from: 'on'
    to: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.window_or_door_open
    state: 'on'
  action:
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.window_or_door_open
  - service: notify.mobile_app_all
    data:
      message: clear_notification
      data:
        tag: window-or-door-open
  mode: single
- id: set_window_or_door_open_time
  alias: Window Or Door Open Set Time
  description: Automatically sets window or door open time based on outdoor temperature
  trigger:
  - platform: numeric_state
    entity_id: sensor.outdoor_temperature
    above: 25
  - platform: numeric_state
    entity_id: sensor.outdoor_temperature
    above: 20
    below: 25
  - platform: numeric_state
    entity_id: sensor.outdoor_temperature
    above: 15
    below: 20
  - platform: numeric_state
    entity_id: sensor.outdoor_temperature
    above: 10
    below: 15
  - platform: numeric_state
    entity_id: sensor.outdoor_temperature
    above: 5
    below: 10
  - platform: numeric_state
    entity_id: sensor.outdoor_temperature
    below: 5
  condition: []
  action:
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: sensor.outdoor_temperature
        above: 25
      sequence:
      - service: input_number.set_value
        data:
          value: 3600
        target:
          entity_id: input_number.window_or_door_open
    - conditions:
      - condition: numeric_state
        entity_id: sensor.outdoor_temperature
        above: 20
        below: 25
      sequence:
      - service: input_number.set_value
        data:
          value: 28800
        target:
          entity_id: input_number.window_or_door_open
    - conditions:
      - condition: numeric_state
        entity_id: sensor.outdoor_temperature
        above: 15
        below: 20
      sequence:
      - service: input_number.set_value
        data:
          value: 10800
        target:
          entity_id: input_number.window_or_door_open
    - conditions:
      - condition: numeric_state
        entity_id: sensor.outdoor_temperature
        above: 10
        below: 15
      sequence:
      - service: input_number.set_value
        data:
          value: 2700
        target:
          entity_id: input_number.window_or_door_open
    - conditions:
      - condition: numeric_state
        entity_id: sensor.outdoor_temperature
        above: 5
        below: 10
      sequence:
      - service: input_number.set_value
        data:
          value: 900
        target:
          entity_id: input_number.window_or_door_open
    - conditions:
      - condition: numeric_state
        entity_id: sensor.outdoor_temperature
        below: 5
      sequence:
      - service: input_number.set_value
        data:
          value: 600
        target:
          entity_id: input_number.window_or_door_open
    default: []
  mode: single
- id: '1672442241658'
  alias: Wind Speed To High For Shutters
  description: Move shutters up if wind speed is to high.
  trigger:
  - platform: numeric_state
    entity_id: weather.home
    above: 50
    attribute: wind_speed
  condition: []
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.shutters_up_group
  mode: single
- id: '1672596725113'
  alias: Terrace Light
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.terrace_door_sensor
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 2
  condition:
  - condition: state
    entity_id: input_boolean.terrace_light_active
    state: 'off'
  - condition: state
    entity_id: switch.bedroom_shutter_down_relay
    state: 'off'
  action:
  - if:
    - condition: state
      entity_id: light.terrace_plants_spots_light
      state: 'off'
    - condition: not
      conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: input_select.daytime
          state: Morning
        - condition: state
          entity_id: input_select.daytime
          state: Daytimes
    then:
    - service: light.turn_on
      data: {}
      target:
        entity_id: light.terrace_plants_spots_light
    else:
    - if:
      - condition: state
        entity_id: light.terrace_plants_spots_light
        state: 'on'
      then:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.terrace_plants_spots_light
  mode: single
- id: '1672609154429'
  alias: Break-In Alarm
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.terrace_door_sensor
    from: 'off'
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.entrance_door_sensor
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.presence
    state: 'off'
  - condition: state
    entity_id: input_boolean.alarm_enabled
    state: 'on'
  action:
  - service: notify.mobile_app_phone_christian
    data:
      message: Someone broke in
      title: 'Break-in⚠️ '
      data:
        tag: break-in
  mode: single
- id: '1672960431370'
  alias: Kitchen Cabinet Switch
  description: ''
  trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: 8bd66cec91faca44983597e71ea981d9
  condition:
  - condition: template
    value_template: "{{ \n  trigger.event.data.command in [\n    'single', 'double',\n
      \ ] \n}}"
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "single" }}'
      sequence:
      - service: switch.toggle
        target:
          entity_id: switch.kitchen_cabinet_switch
        data: {}
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "double" }}'
      sequence:
      - event: zha_event
        event_data:
          device_id: 0157c2c1971568f115955e032e5de269
          command: 5_double
    default: []
  mode: single
- id: '1673219830233'
  alias: Bedroom Bed Light Reset Active State
  description: ''
  trigger:
  - platform: state
    entity_id:
    - light.bedroom_bed_light
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 1
  condition:
  - condition: state
    entity_id: input_boolean.bedroom_bed_light_active
    state: 'on'
  action:
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.bedroom_bed_light_active
  mode: single
- id: '1673297888051'
  alias: Dis-Arm Alarm
  description: Enable/Disable Alarm
  trigger:
  - platform: tag
    tag_id: 821c6997-29e4-4074-b6ef-4c936933a20e
  condition: []
  action:
  - if:
    - condition: state
      entity_id: input_boolean.alarm_enabled
      state: 'off'
    then:
    - service: input_boolean.turn_on
      data: {}
      target:
        entity_id: input_boolean.alarm_enabled
    - device_id: 977d03248b84aba3934e48976ccaee3c
      domain: mobile_app
      type: notify
      message: Alarm Enabled
    else:
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: input_boolean.alarm_enabled
    - device_id: 977d03248b84aba3934e48976ccaee3c
      domain: mobile_app
      type: notify
      message: Alarm Disabled
  mode: single
- id: '1673538263929'
  alias: Office Ceiling Lights Backup Office Parlor State
  description: 'Backup/Restore state of office/parlor when office ceiling lights are
    turned on/off, respectively. '
  trigger:
  - platform: state
    entity_id:
    - light.office_ceiling_lights
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: light.office_ceiling_lights
      state: unavailable
    - condition: state
      entity_id: light.office_ceiling_lights
      state: unknown
  action:
  - if:
    - condition: state
      entity_id: light.office_ceiling_lights
      state: 'on'
    then:
    - service: scene.create
      data:
        snapshot_entities:
        - light.kitchen_cabinet_light
        - light.office_desk_light
        scene_id: office_ceiling_lights_backup_office_parlor_state
    - service: light.turn_off
      data: {}
      target:
        entity_id:
        - light.kitchen_cabinet_light
        - light.office_desk_light
    else:
    - service: scene.turn_on
      data: {}
      target:
        entity_id: scene.office_ceiling_lights_backup_office_parlor_state
  mode: single
- id: '1674166064713'
  alias: Handy Alarm Finalize After Timer Changes To Idle State
  description: ''
  trigger:
  - platform: state
    entity_id:
    - timer.handy_alarm_timer
    from: active
    to: idle
    for:
      hours: 0
      minutes: 0
      seconds: 0
  condition: []
  action:
  - parallel:
    - service: switch.turn_on
      data: {}
      target:
        entity_id: switch.bedroom_shutter_up_relay
    - service: light.turn_off
      data: {}
      target:
        entity_id:
        - light.bedroom_bed_light
        - light.bedroom_nightstand_lights
  mode: single
- id: '1674475181816'
  alias: Parlor Enough Illuminance Light
  description: Turn off parlor lights on enough natural illuminance light.
  trigger:
  - platform: numeric_state
    entity_id: sensor.office_light_sensor_light_level
    above: 59
    for:
      hours: 0
      minutes: 10
      seconds: 0
  condition: []
  action:
  - service: light.turn_off
    data: {}
    target:
      entity_id:
      - light.kitchen_cabinet_light
      - light.kitchen_cabinet_switch
  mode: single
- id: '1674491768826'
  alias: Terrace Light Reset Active State
  description: ''
  trigger:
  - platform: state
    entity_id:
    - light.terrace_plants_spots_light
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 1
  condition:
  - condition: state
    state: 'on'
    entity_id: input_boolean.terrace_light_active
  action:
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.terrace_light_active
  mode: single
- id: '1674667706930'
  alias: Floor Motion Pre-Presence
  description: Turn on kitchen cabinet light if presence is off but floor motion was
    detected (just came home). If after X minutes presence has not been turned on,
    call automation "turn everything off on presence state off".
  trigger:
  - platform: state
    entity_id: binary_sensor.floor_motion_sensor
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.presence
    state: 'off'
  - condition: numeric_state
    entity_id: sensor.office_light_sensor_light_level
    below: 60
  - condition: state
    entity_id: light.kitchen_cabinet_light
    state: 'off'
  action:
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.kitchen_cabinet_light
  - service: scene.turn_on
    data: {}
    target:
      entity_id: scene.kitchen_cabinet_white
  - wait_for_trigger:
    - platform: state
      entity_id:
      - input_boolean.presence
      to: 'on'
    timeout:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  - if:
    - condition: state
      entity_id: input_boolean.presence
      state: 'off'
    then:
    - service: automation.trigger
      data: {}
      target:
        entity_id: automation.turn_everything_off_on_presence_state_off
  mode: queued
  max: 5
- id: '1674754045141'
  alias: Terrace Light Set Active State
  description: ''
  trigger:
  - platform: state
    entity_id:
    - light.terrace_plants_spots_light
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 0
  condition:
  - condition: state
    entity_id: input_boolean.terrace_light_active
    state: 'off'
  - condition: state
    entity_id: binary_sensor.terrace_door_sensor
    state: 'off'
  action:
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.terrace_light_active
  mode: single
- id: '1675204440684'
  alias: Bedroom Switch Bed Light Increase Decrease
  description: ''
  trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: c2f9ff81b7a2837879fa8a92a7aa2d8e
  - platform: event
    event_type: zha_event
    event_data:
      device_id: 2ae648159981b31b3bf901fb4ac2a579
  condition:
  - condition: template
    value_template: "{{\n  trigger.event.data.command in [\n    '3_hold', '3_release',\n
      \   '4_hold', '4_release',\n  ]\n}}"
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "3_hold" }}'
      sequence:
      - repeat:
          count: '20'
          sequence:
          - service: light.turn_on
            data:
              brightness: "{% if (state_attr('light.bedroom_bed_light', 'brightness')
                | int) >= 17 -%}\n  {{ (state_attr('light.bedroom_bed_light', 'brightness')
                | int) - 12 }}\n{% endif -%}"
            target:
              entity_id: light.bedroom_bed_light
          - delay:
              hours: 0
              minutes: 0
              seconds: 0
              milliseconds: 225
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "4_hold" }}'
      sequence:
      - repeat:
          count: '20'
          sequence:
          - service: light.turn_on
            data:
              brightness: "{% if (state_attr('light.bedroom_bed_light', 'brightness')
                | int) <= 243 -%}\n  {{ (state_attr('light.bedroom_bed_light', 'brightness')
                | int) + 12 }}\n{% endif -%}"
            target:
              entity_id: light.bedroom_bed_light
          - delay:
              hours: 0
              minutes: 0
              seconds: 0
              milliseconds: 225
    default:
    - stop: Restarted to break out from loop
  mode: restart
- id: '1675366880293'
  alias: Bathroom Radiator Timer
  description: ''
  trigger:
  - platform: event
    event_type: timer.started
    event_data:
      entity_id: timer.bathroom_radiator_timer
    enabled: true
    id: s
  - platform: event
    event_type: timer.restarted
    event_data:
      entity_id: timer.bathroom_radiator_timer
    enabled: true
    id: r
  - platform: event
    event_type: timer.paused
    event_data:
      entity_id: timer.bathroom_radiator_timer
    enabled: true
    id: p
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.bathroom_radiator_timer
    enabled: true
    id: f
  - platform: event
    event_type: timer.cancelled
    event_data:
      entity_id: timer.bathroom_radiator_timer
    enabled: true
    id: c
  condition: []
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.bathroom_radiator_switch
    enabled: false
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: s
        - condition: trigger
          id: r
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.bathroom_radiator_switch
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: p
        - condition: trigger
          id: f
        - condition: trigger
          id: c
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.bathroom_radiator_switch
    enabled: true
  mode: single
- id: '1675982553957'
  alias: Bedroom Motion Timeout
  description: ''
  trigger:
  - platform: state
    entity_id:
    - timer.bedroom_motion_timer
    from: active
    to: idle
  condition:
  - condition: state
    entity_id: input_boolean.bedroom_bed_light_active
    state: 'off'
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.bedroom_bed_left_motion_sensor
          state: 'on'
        - condition: state
          entity_id: binary_sensor.bedroom_bed_right_motion_sensor
          state: 'on'
      sequence:
      - service: timer.start
        data:
          duration: 00:00:15
        target:
          entity_id: timer.bedroom_motion_timer
    default:
    - service: light.turn_off
      data: {}
      target:
        entity_id: light.bedroom_bed_light
  mode: single
- id: '1681503013847'
  alias: Keep Shutters Closed
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.bedroom_shutter_up_relay
    - switch.parlor_shutter_up_relay
    to: 'on'
  - platform: state
    entity_id:
    - switch.parlor_shutter_down_relay
    - switch.bedroom_shutter_down_relay
    from: 'on'
    to: 'off'
    enabled: false
  condition: []
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id:
      - switch.parlor_shutter_down_relay
      - switch.bedroom_shutter_down_relay
  mode: single
- id: '1693697342075'
  alias: Shutter Relay Off After Delay
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.parlor_shutter_down_relay
    - switch.parlor_shutter_up_relay
    - switch.bedroom_shutter_up_relay
    - switch.bedroom_shutter_down_relay
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.shutter_relay_off_delay_enabled
    state: 'on'
  action:
  - delay:
      milliseconds: '{{ states("input_number.shutter_relay_off_delay") | int }}'
  - service: switch.turn_off
    target:
      entity_id: '{{ trigger.entity_id }}'
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.shutter_relay_off_delay_enabled
  mode: single
- id: '1698815214150'
  alias: Turn Wallpanel Screensaver off when approaching
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.nspanelpro_proximity_sensor
    above: 250
  condition:
  - condition: state
    entity_id: input_boolean.wallpanel_screensaver
    state: 'on'
  action:
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.wallpanel_screensaver
  mode: single
- id: '1698977588606'
  alias: Wallpanel Profile
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.daytime
  - platform: state
    entity_id:
    - input_boolean.presence
  condition: []
  action:
  - if:
    - condition: state
      entity_id: input_boolean.presence
      state: 'off'
    then:
    - service: input_text.set_value
      data:
        value: disable
      target:
        entity_id: input_text.wallpanel_profile
    else:
    - if:
      - condition: not
        conditions:
        - condition: state
          entity_id: input_select.daytime
          state: Night
      then:
      - service: input_text.set_value
        data:
          value: enable
        target:
          entity_id: input_text.wallpanel_profile
  mode: single
- id: '1699432233154'
  alias: Break-in Alarm Clear
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.presence
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: notify.mobile_app_phone_christian
    data:
      message: clear_notification
      data:
        tag: break-in
  mode: single
