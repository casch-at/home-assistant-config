- id: enough_illuminance
  alias: Enough illuminance light
  description: Turn off lights on enough natural illuminance light.
  trigger:
  - platform: numeric_state
    entity_id: sensor.office_light_sensor_light_level
    above: 99
    for:
      hours: 0
      minutes: 10
      seconds: 0
  condition:
  - condition: state
    entity_id: light.all_lights
    state: 'on'
  action:
  - service: light.turn_off
    target:
      entity_id: light.all_lights
    data: {}
  mode: single
- id: fire_alarm
  alias: Fire Alarm
  description: ''
  mode: parallel
  max: 10
  trigger:
  - platform: state
    entity_id: binary_sensor.office_smoke_sensor
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: binary_sensor.upstairs_smoke_sensor
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: binary_sensor.lower_kitchen_smoke_sensor
    from: 'off'
    to: 'on'
  condition:
  - condition: template
    value_template: '{{ not is_state(trigger.entity_id, "unavailable") }}'
  action:
  - service: notify.notify
    data:
      title: '{{ trigger.to_state.name }} Critical'
      message: Smoke detected
  - service: notify.persistent_notification
    data:
      title: '{{ trigger.to_state.name }} Critical'
      message: Smoke detected
- id: handy_alaram
  alias: Handy alarm
  description: ''
  mode: queued
  max: 2
  trigger:
  - platform: state
    entity_id: binary_sensor.christian_schwarzgruber_alarm
    from: 'off'
    to: 'on'
  condition: []
  action:
  - if:
    - condition: numeric_state
      entity_id: sensor.floor_motion_sensor_light_level
      below: 100
    - condition: state
      entity_id: light.kitchen_cabinet_light
      state: 'off'
    then:
    - service: scene.turn_on
      data:
        transition: 15
      target:
        entity_id: scene.kitchen_cabinet_white
  - if:
    - condition: state
      entity_id: binary_sensor.cover_operation_to_cold
      state: 'off'
    then:
    - service: switch.turn_on
      data: {}
      target:
        entity_id: switch.parlor_shutter_up_relay
  - if:
    - condition: template
      value_template: '{{ trigger.entity_id == ''binary_sensor.christian_schwarzgruber_alarm''
        }}'
    then:
    - service: automation.trigger
      data:
        skip_condition: false
      target:
        entity_id: automation.home_office
- id: low_battery_level_warning
  alias: Low battery level warning
  description: ''
  mode: queued
  max: 50
  trigger:
  - platform: numeric_state
    entity_id: sensor.bathroom_switch_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.bedroom_motion_sensor_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.floor_motion_sensor_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.office_multi_sensor_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.upstairs_multi_sensor_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.parlor_multi_sensor_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.bedroom_multi_sensor_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.bathroom_multi_sensor_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.bedroom_window_sensor_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.balcony_door_sensor_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.office_window_sensor_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.floor_switch_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.office_switch_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.office_magic_cube_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.bedroom_christian_switch_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.bedroom_sonia_switch_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.office_light_sensor_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.office_switch_battery_level
    below: 15
    for:
      minutes: 5
  - platform: numeric_state
    entity_id: sensor.parlor_light_sensor_battery_level
    below: 15
    for:
      minutes: 5
  condition:
  - condition: template
    value_template: "{{\n  not\n    is_state(trigger.entity_id, 'unavailable')\n  and\n
      \   states(trigger.entity_id) | int < 15\n}}"
  action:
  - service: notify.persistent_notification
    data:
      message: '{{ trigger.to_state.name }} battery level bellow {{ trigger.to_state.state
        | int + 1}} %'
      title: '{{ trigger.to_state.name }} Critical'
- id: low_illuminance
  alias: Low illuminance light
  description: Turn on lights on low natural illumance light.
  trigger:
  - platform: numeric_state
    entity_id: sensor.floor_motion_sensor_light_level
    below: 100
    for: 10
  - platform: state
    entity_id:
    - person.christian_schwarzgruber
    from: not_home
    to: home
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - platform: state
    entity_id:
    - input_boolean.presence
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.presence
    state: 'on'
  - condition: numeric_state
    entity_id: sensor.floor_motion_sensor_light_level
    below: 100
  - condition: not
    conditions:
    - condition: state
      entity_id: input_select.daytime
      state: Night
  - condition: state
    entity_id: light.kitchen_cabinet_light
    state: 'off'
  action:
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.daytime
        state: Night
      - condition: state
        entity_id: input_select.daytime
        state: Evening
    then:
    - service: scene.turn_on
      data: {}
      target:
        entity_id: scene.kitchen_cabinet_night
    else:
    - service: scene.turn_on
      data: {}
      target:
        entity_id: scene.kitchen_cabinet_white
  mode: single
  max_exceeded: silent
- id: night_lights_based_on_input_select_scenes
  alias: Night lights based on input select scenes
  description: ''
  mode: single
  trigger:
  - platform: state
    entity_id:
    - input_select.night_lights_scenes
  condition: []
  action:
  - service: scene.turn_on
    data:
      entity_id: '{{ states(''input_select.night_lights_scenes'') }}'
- id: floor_motion
  alias: Floor motion
  description: ''
  mode: restart
  trigger:
  - platform: state
    entity_id: binary_sensor.floor_motion_sensor
    from: 'off'
    to: 'on'
  condition:
  - condition: or
    conditions:
    - condition: numeric_state
      entity_id: sensor.floor_motion_sensor_light_level
      below: 55
    - condition: numeric_state
      entity_id: automation.floor_motion
      above: 0
      attribute: current
  - condition: state
    entity_id: input_boolean.floor_light_active
    state: 'off'
  action:
  - service: input_number.increment
    target:
      entity_id: input_number.floor_motion_timeout_multiplier
  - service: light.turn_on
    data:
      brightness: '{{ states(''sensor.daytime_light_brightness'') }}'
      color_temp: '{{ states(''sensor.daytime_light_color_temp'') }}'
    target:
      entity_id: light.floor_lights
  - wait_for_trigger:
      platform: state
      entity_id: binary_sensor.floor_motion_sensor
      from: 'on'
      to: 'off'
      for: "{{\n  (states('input_number.motion_timeout') | int)\n    *\n  (states('input_number.floor_motion_timeout_multiplier')
        | int)\n}}"
  - condition: state
    entity_id: input_boolean.floor_light_active
    state: 'off'
  - service: light.turn_off
    target:
      entity_id: light.floor_lights
  - service: input_number.set_value
    target:
      entity_id: input_number.floor_motion_timeout_multiplier
    data:
      value: 0
- id: floor_helper_motion
  alias: Floor helper motion
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.floor_helper_motion_sensor
    from: 'off'
    to: 'on'
  condition:
  - condition: or
    conditions:
    - condition: numeric_state
      entity_id: sensor.floor_helper_motion_sensor_light_level
      below: 55
    - condition: numeric_state
      entity_id: automation.floor_helper_motion
      above: 0
      attribute: current
  - condition: state
    entity_id: input_boolean.floor_helper_light_active
    state: 'off'
  - condition: numeric_state
    entity_id: sensor.floor_helper_motion_sensor_light_level
    below: 10
  - condition: numeric_state
    entity_id: sensor.parlor_light_sensor_light_level
    below: 10
  - condition: numeric_state
    entity_id: sensor.bedroom_motion_sensor_light_level
    below: 10
  action:
  - service: input_number.increment
    target:
      entity_id: input_number.floor_helper_motion_timeout_multiplier
    data: {}
  - service: light.turn_on
    data:
      brightness: '{{ states(''sensor.daytime_light_brightness'') }}'
      color_temp: '{{ states(''sensor.daytime_light_color_temp'') }}'
    target:
      entity_id: light.floor_back_light
  - wait_for_trigger:
      platform: state
      entity_id: binary_sensor.floor_helper_motion_sensor
      from: 'on'
      to: 'off'
      for: "{{\n  (states('input_number.motion_timeout') | int)\n    *\n  (states('input_number.floor_helper_motion_timeout_multiplier')
        | int)\n}}"
  - condition: state
    entity_id: input_boolean.floor_helper_light_active
    state: 'off'
  - service: light.turn_off
    target:
      entity_id: light.floor_back_light
    data: {}
  - service: input_number.set_value
    target:
      entity_id: input_number.floor_helper_motion_timeout_multiplier
    data:
      value: 0
  mode: restart
- id: floor_light_active_state
  alias: Floor light reset active state
  description: ''
  trigger:
  - platform: state
    entity_id: light.floor_lights
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id:
      - input_boolean.floor_light_active
      - input_boolean.floor_helper_light_active
  mode: single
- id: floor_switch
  alias: Floor switch
  description: ''
  trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: 0157c2c1971568f115955e032e5de269
  condition:
  - condition: template
    value_template: "{{\n  trigger.event.data.command in [\n    '1_single', '1_double',
      '1_hold',\n    '2_single',             '2_hold',\n    '3_single', '3_double',
      '3_hold',\n    '4_single', '4_double', '4_hold',\n    '5_single', '5_double',
      '5_hold',\n    '6_single', '6_double', '6_hold'\n  ]\n}}"
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "1_hold" }}'
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: input_boolean.state_night_running
            state: 'off'
          sequence:
          - service: input_boolean.turn_on
            target:
              entity_id: input_boolean.state_night_running
            data: {}
          - service: scene.create
            data:
              scene_id: state_night_kitchen_cabinet_backup
              snapshot_entities:
              - light.kitchen_cabinet_light
          - repeat:
              count: '6'
              sequence:
              - service: light.turn_on
                data:
                  rgb_color:
                  - 200
                  - 50
                  - 0
                  brightness: 150
                  transition: 1
                target:
                  entity_id: light.kitchen_cabinet_light
              - delay: 00:00:01
              - service: light.turn_on
                data:
                  rgb_color:
                  - 200
                  - 50
                  - 0
                  brightness: 50
                  transition: 1
                target:
                  entity_id: light.kitchen_cabinet_light
              - delay: 00:00:01
          - service: input_select.select_option
            data:
              option: Night
            target:
              entity_id: input_select.daytime
          - service: input_boolean.turn_off
            target:
              entity_id: input_boolean.state_night_running
            data: {}
        - conditions:
          - condition: state
            entity_id: input_boolean.state_night_running
            state: 'on'
          sequence:
          - service: input_boolean.turn_off
            target:
              entity_id: input_boolean.state_night_running
            data: {}
          - service: scene.turn_on
            target:
              entity_id: scene.state_night_kitchen_cabinet_backup
            data: {}
        default: []
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "1_single" }}'
      sequence:
      - service: script.turn_on
        data:
          variables:
            entity_id: light.nightstand_lights
        target:
          entity_id: script.kitchen_cabinet_light_based_on_entity_state
        enabled: false
      - if:
        - condition: state
          entity_id: light.bedroom_bed_light
          state: 'off'
        then:
        - service: light.turn_on
          data:
            transition: 0
            brightness_pct: 25
            rgb_color:
            - 255
            - 173
            - 0
          target:
            entity_id: light.bedroom_bed_light
        else:
        - service: light.turn_off
          data: {}
          target:
            entity_id: light.bedroom_bed_light
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "1_double" }}'
      sequence:
      - service: input_select.select_next
        target:
          entity_id: input_select.bedroom_bed_scenes
        data: {}
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "2_single" }}'
      sequence:
      - service: light.toggle
        target:
          entity_id: light.office_ceiling_lights
        data: {}
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "2_hold" }}'
      sequence:
      - service: homeassistant.turn_off
        target:
          entity_id: group.office_group
        data: {}
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "3_single" }}'
      sequence:
      - service: script.turn_on
        data:
          variables:
            entity_id: switch.bathroom_mirror_light_switch
        target:
          entity_id: script.kitchen_cabinet_light_based_on_entity_state
      - event: zha_event
        event_data:
          device_id: 5066dc0a0d6a11eba736919d4fa21431
          command: 2_single
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "3_double" }}'
      sequence:
      - service: script.turn_on
        data:
          variables:
            entity_id: light.bathroom_lights
        target:
          entity_id: script.kitchen_cabinet_light_based_on_entity_state
      - event: zha_event
        event_data:
          device_id: 5066dc0a0d6a11eba736919d4fa21431
          command: 3_single
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "3_hold" }}'
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: input_boolean.presence
            state: 'on'
          - condition: state
            entity_id: input_boolean.presence_off_running
            state: 'off'
          sequence:
          - service: input_boolean.turn_on
            target:
              entity_id: input_boolean.presence_off_running
            data: {}
          - repeat:
              count: '2'
              sequence:
              - service: light.turn_on
                data:
                  flash: long
                target:
                  entity_id: light.floor_lights
              - delay: 00:00:10
          - repeat:
              count: '2'
              sequence:
              - service: light.turn_on
                data:
                  flash: long
                target:
                  entity_id: light.floor_lights
              - delay: 00:00:05
          - service: input_boolean.turn_off
            target:
              entity_id:
              - input_boolean.presence
              - input_boolean.presence_off_running
            data: {}
        - conditions:
          - condition: state
            entity_id: input_boolean.presence_off_running
            state: 'on'
          sequence:
          - service: input_boolean.turn_off
            target:
              entity_id: input_boolean.presence_off_running
            data: {}
          - service: persistent_notification.create
            data:
              title: Presence 'off' Canceled
          - repeat:
              count: '2'
              sequence:
              - service: light.toggle
                data:
                  flash: long
                target:
                  entity_id: light.floor_lights
        - conditions:
          - condition: state
            entity_id: input_boolean.presence
            state: 'off'
          sequence:
          - service: input_boolean.turn_on
            target:
              entity_id: input_boolean.presence
            data: {}
          - repeat:
              count: '2'
              sequence:
              - service: light.toggle
                data:
                  flash: long
                target:
                  entity_id: light.kitchen_cabinet_light
        default: []
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "4_single" }}'
      sequence:
      - service: script.turn_on
        data:
          variables:
            entity_id: light.terrace_plant_lights
        target:
          entity_id: script.kitchen_cabinet_light_based_on_entity_state
      - service: homeassistant.toggle
        target:
          entity_id: light.terrace_plant_lights
        data: {}
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "4_double" }}'
      sequence:
      - service: input_select.select_next
        target:
          entity_id: input_select.terrace_plant_scenes
        data: {}
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "5_single" }}'
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: input_boolean.floor_light_active
            state: 'off'
          sequence:
          - service: input_boolean.turn_on
            target:
              entity_id: input_boolean.floor_light_active
            data: {}
          - service: light.turn_on
            data:
              brightness: '{{ states(''sensor.daytime_light_brightness'') }}'
              color_temp: '{{ states(''sensor.daytime_light_color_temp'') }}'
            target:
              entity_id: light.floor_lights
        default:
        - service: light.turn_off
          target:
            entity_id: light.floor_lights
          data: {}
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "5_double" }}'
      sequence:
      - service: light.toggle
        data:
          brightness: '{{ states(''sensor.daytime_light_brightness'') }}'
          color_temp: '{{ states(''sensor.daytime_light_color_temp'') }}'
        target:
          entity_id: light.floor_back_light
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "5_hold" }}'
      sequence:
      - if:
        - condition: state
          entity_id: light.floor_front_light
          state: 'off'
        then:
        - service: input_boolean.turn_on
          target:
            entity_id:
            - input_boolean.floor_light_active
            - input_boolean.floor_helper_light_active
          data: {}
        else:
        - service: input_boolean.turn_off
          target:
            entity_id:
            - input_boolean.floor_light_active
            - input_boolean.floor_helper_light_active
          data: {}
      - service: light.toggle
        data:
          brightness: '{{ states(''sensor.daytime_light_brightness'') }}'
          color_temp: '{{ states(''sensor.daytime_light_color_temp'') }}'
        target:
          entity_id: light.floor_front_light
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "6_hold" }}'
      sequence:
      - service: switch.toggle
        target:
          entity_id: switch.aroma_diffuser
        data: {}
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "6_single" }}'
      sequence:
      - service: light.toggle
        target:
          entity_id: light.kitchen_cabinet_light
        data: {}
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "6_double" }}'
      sequence:
      - service: scene.turn_on
        target:
          entity_id: '{{ states("input_select.kitchen_cabinet_scenes") }}'
      - service: input_select.select_next
        target:
          entity_id: input_select.kitchen_cabinet_scenes
        data: {}
    default: []
  mode: restart
- id: presence_auto_off
  alias: Automatically turn presence off
  description: ''
  trigger:
  - platform: template
    value_template: "{{\n  is_state('person.christian_schwarzgruber', 'not_home')\n}}"
  condition: []
  action:
  - service: notify.mobile_app_phone_christian
    data:
      message: Christian is away
  - service: input_boolean.turn_off
    target:
      entity_id: input_boolean.presence
    data: {}
- id: presence_everything_off
  alias: Turn everything off on presence state off
  description: ''
  mode: single
  trigger:
  - platform: state
    entity_id: input_boolean.presence
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: homeassistant.turn_off
    target:
      entity_id:
      - light.all_lights
      - switch.devices_group
  - service: switch.turn_off
    target:
      entity_id:
      - switch.printer_switch
  - wait_template: "{{\n  is_state('device_tracker.pc01_lan_router', 'not_home') and\n
      \ is_state('device_tracker.pc01_wlan_router', 'not_home') and\n  is_state('device_tracker.lap_work_router',
      'not_home')\n}}"
    continue_on_timeout: true
    timeout: 600
  - if:
    - condition: template
      value_template: "{{\n  is_state('device_tracker.pc01_lan_router', 'not_home')
        and\n  is_state('device_tracker.pc01_wlan_router', 'not_home') and\n  is_state('device_tracker.lap_work_router',
        'not_home')\n}}"
    then:
    - service: switch.turn_off
      target:
        entity_id: switch.desk_and_laptop_group
    - if:
      - condition: numeric_state
        entity_id: sensor.3d_printer_switch_energy_power
        below: 40
      then:
      - service: switch.turn_off
        target:
          entity_id:
          - switch.3d_printer_switch
          - switch.3d_printer_usb
  - service: switch.turn_on
    target:
      entity_id: switch.marantz_amp_power
- id: presence_person_home
  alias: Turn presence on when person is at home
  description: ''
  trigger:
  - platform: state
    entity_id: person.christian_schwarzgruber
    from: not_home
    to: home
  condition: []
  action:
  - if:
    - condition: state
      entity_id: input_boolean.presence
      state: 'off'
    then:
    - service: input_boolean.turn_on
      target:
        entity_id: input_boolean.presence
      data: {}
  - if:
    - condition: template
      value_template: '{{ trigger.entity_id == ''person.christian_schwarzgruber''
        }}'
    then:
    - service: automation.trigger
      data:
        skip_condition: false
      target:
        entity_id: automation.home_office
  mode: queued
  max: 2
- id: bathroom_motion
  alias: Bathroom motion
  description: ''
  mode: restart
  trigger:
  - platform: state
    entity_id: binary_sensor.bathroom_motion_sensor
    from: 'off'
    to: 'on'
  condition:
  - condition: or
    conditions:
    - condition: numeric_state
      entity_id: sensor.bathroom_motion_sensor_light_level
      below: 60
    - condition: template
      value_template: '{% set now = now() | as_timestamp %} {% set last = state_attr(''automation.bathroom_motion'',
        ''last_triggered'') | as_timestamp %} {{ ((now - last) / 60 | int) < 6 }}'
  - condition: state
    entity_id: input_boolean.bathroom_light_active
    state: 'off'
  action:
  - service: input_number.increment
    target:
      entity_id: input_number.bathroom_motion_timeout_multiplier
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.daytime
        state: Daytimes
      - condition: state
        entity_id: input_select.daytime
        state: Morning
    then:
    - service: light.turn_on
      data:
        brightness: "{% if (states('sensor.daytime_light_brightness') | int + 30)
          >= 254 -%}\n  {{ states('sensor.daytime_light_brightness') }}\n{% else -%}\n
          \  {{ states('sensor.daytime_light_brightness') | int + 30 }}\n{% endif
          %}"
        color_temp: '{{ states(''sensor.daytime_light_color_temp'') }}'
      target:
        entity_id: light.bathroom_lights
    else:
    - service: light.turn_on
      data:
        brightness: "{% if (states('sensor.daytime_light_brightness') | int + 30)
          >= 254 -%}\n  {{ states('sensor.daytime_light_brightness') }}\n{% else -%}\n
          \  {{ states('sensor.daytime_light_brightness') | int + 30 }}\n{% endif
          %}"
        color_temp: '{{ states(''sensor.daytime_light_color_temp'') }}'
      target:
        entity_id: light.bathroom_ceiling_lights
  - wait_for_trigger:
      platform: state
      entity_id: binary_sensor.bathroom_motion_sensor
      from: 'on'
      to: 'off'
      for: "{{\n  (states('input_number.motion_timeout') | int)\n    *\n  (states('input_number.bathroom_motion_timeout_multiplier')
        | int)\n}}"
  - condition: state
    entity_id: input_boolean.bathroom_light_active
    state: 'off'
  - service: light.turn_off
    target:
      entity_id: light.bathroom_lights
  - service: input_number.set_value
    target:
      entity_id: input_number.bathroom_motion_timeout_multiplier
    data:
      value: 0
- id: bathroom_switch_light_state
  alias: Bathroom switch light reset active state
  description: ''
  trigger:
  - platform: state
    entity_id: light.bathroom_lights
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.bathroom_light_active
  mode: single
- id: bathroom_light
  alias: Bathroom light
  description: ''
  mode: queued
  max: 5
  trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: 5066dc0a0d6a11eba736919d4fa21431
  condition:
  - condition: template
    value_template: "{{\n  trigger.event.data.command in [\n    '1_single', '1_double',\n
      \   '2_single', '2_double',\n    '3_single', '3_double',\n    '4_single',\n
      \ ]\n}}"
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "1_single" }}'
      sequence:
      - choose:
        - conditions:
          - condition: or
            conditions:
            - condition: state
              entity_id: light.bathroom_mirror_light
              state: 'off'
            - condition: state
              entity_id: input_boolean.bathroom_light_active
              state: 'off'
          sequence:
          - service: input_boolean.turn_on
            target:
              entity_id: input_boolean.bathroom_light_active
          - service: light.turn_on
            target:
              entity_id: light.bathroom_mirror_light
        default:
        - service: light.turn_off
          target:
            entity_id: light.bathroom_mirror_light
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "1_double" }}'
      sequence:
      - event: zha_event
        event_data:
          device_id: c2cff687003dd88942aa8597fe9f8734
          command: 2_single
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "1_double" }}'
      sequence:
      - choose:
        - conditions:
          - condition: or
            conditions:
            - condition: state
              entity_id: light.bathroom_mirror_light
              state: 'off'
            - condition: state
              entity_id: input_boolean.bathroom_light_active
              state: 'off'
          sequence:
          - service: input_boolean.turn_on
            target:
              entity_id: input_boolean.bathroom_light_active
          - service: light.turn_on
            target:
              entity_id: light.bathroom_mirror_light
        default:
        - service: light.turn_off
          target:
            entity_id: light.bathroom_mirror_light
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "2_single" }}'
      sequence:
      - choose:
        - conditions:
          - condition: or
            conditions:
            - condition: state
              entity_id: light.bathroom_ceiling_lights
              state: 'off'
            - condition: state
              entity_id: input_boolean.bathroom_light_active
              state: 'off'
          sequence:
          - service: input_boolean.turn_on
            target:
              entity_id: input_boolean.bathroom_light_active
          - service: light.turn_on
            data:
              brightness: '{{ states(''sensor.daytime_light_brightness'') }}'
              color_temp: '{{ states(''sensor.daytime_light_color_temp'') }}'
            target:
              entity_id: light.bathroom_ceiling_lights
        default:
        - service: light.turn_off
          target:
            entity_id: light.bathroom_ceiling_lights
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "3_single" }}'
      sequence:
      - choose:
        - conditions:
          - condition: or
            conditions:
            - condition: state
              entity_id: light.bathroom_lights
              state: 'off'
            - condition: state
              entity_id: input_boolean.bathroom_light_active
              state: 'off'
          sequence:
          - service: input_boolean.turn_on
            target:
              entity_id: input_boolean.bathroom_light_active
          - service: light.turn_on
            data:
              brightness: '{{ states(''sensor.daytime_light_brightness'') }}'
              color_temp: '{{ states(''sensor.daytime_light_color_temp'') }}'
            target:
              entity_id:
              - light.bathroom_ceiling_lights
              - light.bathroom_mirror_light
        default:
        - service: light.turn_off
          target:
            entity_id:
            - light.bathroom_ceiling_lights
            - light.bathroom_mirror_light
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "3_double" }}'
      sequence:
      - event: zha_event
        event_data:
          device_id: c2cff687003dd88942aa8597fe9f8734
          command: 1_single
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "4_single" }}'
      sequence:
      - service: scene.turn_on
        target:
          entity_id: '{{ states("input_select.bathroom_scenes") }}'
      - service: input_select.select_next
        target:
          entity_id: input_select.bathroom_scenes
    default: []
- id: terrace_light_based_on_input_select_scenes
  alias: Terrace light based on input select scenes
  description: ''
  mode: single
  trigger:
  - platform: state
    entity_id:
    - input_select.terrace_plant_scenes
  condition: []
  action:
  - service: scene.turn_on
    data:
      entity_id: '{{ states(''input_select.terrace_plant_scenes'') }}'
- id: daytime
  alias: Set daytime
  description: Set daytime "Morning" (also on alarm) and "Evening" based on sun elevation
    and "Daytimes" based on lightlevel.
  mode: single
  trigger:
  - platform: numeric_state
    entity_id: sun.sun
    attribute: elevation
    above: 5
  - platform: state
    entity_id: binary_sensor.christian_schwarzgruber_alarm
    from: 'off'
    to: 'on'
  - platform: numeric_state
    entity_id: sensor.floor_motion_sensor_light_level
    above: 130
  - platform: numeric_state
    entity_id: sun.sun
    attribute: elevation
    below: 2.5
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: "{{\n    states('input_select.daytime') == 'Night'\n  and
          (\n    (trigger.entity_id == 'sun.sun' and state_attr(trigger.entity_id,
          'rising'))\n  or\n    trigger.entity_id == 'binary_sensor.christian_schwarzgruber_alarm'\n
          \ )\n}}"
      sequence:
      - service: input_select.select_option
        data:
          option: Morning
        target:
          entity_id: input_select.daytime
    - conditions:
      - condition: template
        value_template: '{{ trigger.entity_id == ''sensor.floor_motion_sensor_light_level''
          }}'
      sequence:
      - service: input_select.select_option
        data:
          option: Daytimes
        target:
          entity_id: input_select.daytime
    - conditions:
      - condition: template
        value_template: '{{ trigger.entity_id == ''sun.sun'' and not state_attr(trigger.entity_id,
          ''rising'') }}'
      sequence:
      - service: input_select.select_option
        data:
          option: Evening
        target:
          entity_id: input_select.daytime
    default: []
- id: night_mode
  alias: Night mode
  description: ''
  trigger:
  - platform: state
    entity_id: input_select.daytime
    from: Evening
    to: Night
  condition:
  - condition: state
    entity_id: input_boolean.presence
    state: 'on'
  action:
  - if:
    - condition: template
      value_template: "{{\n  states('binary_sensor.cover_operation_to_cold') == 'off'
        }}"
    then:
    - service: switch.turn_on
      data: {}
      target:
        entity_id: switch.bedroom_shutter_down_relay
  - service: scene.turn_on
    data:
      entity_id: scene.night_toilet_light
  - service: automation.trigger
    target:
      entity_id: automation.turn_everything_off_on_presence_state_off
    data: {}
  - wait_template: '{{ states("light.bedroom_bed_light") == ''off'' }}'
    timeout: 00:00:02
    continue_on_timeout: true
  - service: scene.turn_on
    data:
      entity_id: scene.night_toilet_light
  - service: light.turn_off
    data:
      transition: 100
    target:
      entity_id:
      - light.bedroom_bed_light
      - light.floor_back_light
  mode: single
- id: kitchen_cabinet_light_based_on_input_select_scenes
  alias: Kitchen cabinet light based on input select scenes
  description: ''
  mode: single
  trigger:
  - platform: state
    entity_id:
    - input_select.kitchen_cabinet_scenes
  condition: []
  action:
  - service: scene.turn_on
    data:
      entity_id: '{{ states(''input_select.kitchen_cabinet_scenes'') }}'
- id: charge_tablet
  alias: Charge tablet
  description: ''
  mode: single
  trigger:
  - platform: numeric_state
    entity_id: sensor.tablet_battery_level
    below: 20
  - platform: numeric_state
    entity_id: sensor.tablet_battery_level
    above: 99
  condition: []
  action:
  - if:
    - condition: numeric_state
      entity_id: sensor.tablet_battery_level
      below: 15
    then:
    - service: switch.turn_on
      target:
        entity_id: switch.3d_printer_usb
    else:
    - service: switch.turn_off
      target:
        entity_id: switch.3d_printer_usb
- id: desk_height
  alias: Desk height
  description: ''
  mode: restart
  trigger:
  - platform: state
    entity_id: input_number.desk_height
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: "{{\n  states('sensor.desk_control_height') | int < states('input_number.desk_height')
          | int\n}}"
      sequence:
      - service: switch.turn_off
        target:
          entity_id: switch.desk_control_button_down
      - delay:
          milliseconds: 250
      - service: switch.turn_on
        target:
          entity_id: switch.desk_control_button_up
      - wait_template: "{{\n  (states('sensor.desk_control_height') | int + 1) ==
          states('input_number.desk_height') | int\n}}"
      - service: switch.turn_off
        target:
          entity_id: switch.desk_control_button_up
    - conditions:
      - condition: template
        value_template: "{{\n  states('sensor.desk_control_height') | int > states('input_number.desk_height')
          | int\n}}"
      sequence:
      - service: switch.turn_off
        target:
          entity_id: switch.desk_control_button_up
      - delay:
          milliseconds: 250
      - service: switch.turn_on
        target:
          entity_id: switch.desk_control_button_down
      - wait_template: "{{\n  (states('sensor.desk_control_height') | int - 1) ==
          states('input_number.desk_height') | int\n}}"
      - service: switch.turn_off
        target:
          entity_id: switch.desk_control_button_down
    default: []
- id: desk_switch_turn_on
  alias: Desk Switch Turn On
  description: ''
  mode: single
  trigger:
  - platform: state
    entity_id:
    - switch.wake_on_lan_tower
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: switch.desk_switch
    state: 'off'
  action:
  - service: switch.turn_on
    target:
      entity_id: switch.desk_switch
- id: home_office
  alias: Home office
  description: ''
  mode: single
  trigger: []
  condition:
  - condition: state
    entity_id: calendar.work_home_office
    state: 'on'
  - condition: time
    before: '17:00:00'
    after: 06:00:00
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  - condition: state
    entity_id: switch.desk_and_laptop_group
    state: 'off'
  action:
  - service: switch.turn_on
    target:
      entity_id: switch.desk_and_laptop_group
- id: office_low_illuminance
  alias: Office low illuminance light
  description: Turn on lights on low natural illumance light.
  trigger:
  - platform: numeric_state
    entity_id: sensor.office_light_sensor_light_level
    below: 100
    for: 10
  - platform: state
    entity_id:
    - person.christian_schwarzgruber
    from: not_home
    to: home
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - platform: state
    entity_id: switch.desk_switch
    from: 'off'
    to: 'on'
  - platform: state
    entity_id:
    - input_boolean.presence
    from: 'off'
    to: 'on'
  - platform: state
    entity_id:
    - device_tracker.lap_work_router
    - device_tracker.pc01_lan_router
    - device_tracker.pc01_wlan_router
    to: home
  condition:
  - condition: numeric_state
    entity_id: sensor.office_light_sensor_light_level
    below: 100
  - condition: not
    conditions:
    - condition: state
      entity_id: input_select.daytime
      state: Night
  - condition: state
    entity_id: person.christian_schwarzgruber
    state: home
  - condition: state
    entity_id: light.office_desk_light
    state: 'off'
  - condition: state
    entity_id: switch.desk_switch
    state: 'on'
  - condition: state
    entity_id: input_boolean.presence
    state: 'on'
  action:
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.daytime
        state: Night
      - condition: state
        entity_id: input_select.daytime
        state: Evening
    then:
    - service: scene.turn_on
      data: {}
      target:
        entity_id: scene.office_desk_night
    else:
    - service: scene.turn_on
      data: {}
      target:
        entity_id: scene.office_desk_white
  mode: single
  max_exceeded: silent
- id: magic_cube
  alias: Office magic cube
  description: ''
  mode: restart
  trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: 6933643e75b1542b3b5e5e24f34d8b0b
  condition:
  - condition: template
    value_template: "{{\n  trigger.event.data.command in [\n    'shake', 'flip', 'knock',
      'rotate_left', 'rotate_right', 'slide'\n  ]\n}}"
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "shake" }}'
      sequence:
      - service: scene.turn_on
        target:
          entity_id: '{{ states("input_select.office_desk_scenes") }}'
      - service: input_select.select_next
        target:
          entity_id: input_select.office_desk_scenes
    - conditions:
      - condition: template
        value_template: "{{\n    trigger.event.data.command == \"flip\"\n  and\n    trigger.event.data.args.flip_degrees
          == 90\n}}"
      - condition: state
        entity_id: binary_sensor.cover_operation_to_cold
        state: 'off'
      - condition: state
        entity_id: binary_sensor.office_window_sensor
        state: 'off'
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.args.activated_face == 5 }}'
          sequence:
          - service: cover.close_cover
            target:
              entity_id: cover.office_roller_shutter_left_level
        - conditions:
          - condition: template
            value_template: "{{\n  trigger.event.data.args.value == 96\nor\n  trigger.event.data.args.value
              == 72\n}}"
          sequence:
          - service: cover.stop_cover
            target:
              entity_id: cover.office_roller_shutter_left_level
        - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.args.activated_face == 2 }}'
          sequence:
          - service: cover.open_cover
            target:
              entity_id: cover.office_roller_shutter_left_level
        - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.args.value  == 69 }}'
          sequence:
          - service: cover.close_cover
            target:
              entity_id: cover.office_roller_shutter_right_level
        - conditions:
          - condition: template
            value_template: "{{\n    trigger.event.data.args.value == 80\n  or\n    trigger.event.data.args.value
              == 104\n}}"
          sequence:
          - service: cover.stop_cover
            target:
              entity_id: cover.office_roller_shutter_right_level
        - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.args.value == 66 }}'
          sequence:
          - service: cover.open_cover
            target:
              entity_id: cover.office_roller_shutter_right_level
    - conditions:
      - condition: template
        value_template: "{{\n    trigger.event.data.command == \"flip\"\n  and\n    trigger.event.data.args.flip_degrees
          == 180\n}}"
      sequence:
      - service: switch.turn_on
        target:
          entity_id: switch.desk_and_laptop_group
      - condition: numeric_state
        entity_id: sensor.office_light_sensor_light_level
        below: 100
      - service: scene.turn_on
        target:
          entity_id: scene.office_desk_white
    - conditions:
      - condition: template
        value_template: "{{\n    trigger.event.data.command == \"knock\"\n}}"
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: light.office_desk_light
            state: 'on'
          sequence:
          - service: light.turn_off
            target:
              entity_id: light.office_desk_light
        default:
        - service: light.turn_on
          target:
            entity_id: light.office_desk_light
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "rotate_right" }}'
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: switch.desk_control_button_1
            state: 'on'
          sequence:
          - service: switch.turn_off
            target:
              entity_id:
              - switch.desk_control_button_1
        default:
        - service: switch.turn_off
          target:
            entity_id:
            - switch.desk_control_button_4
        - delay:
            milliseconds: 250
        - service: switch.turn_on
          target:
            entity_id: switch.desk_control_button_1
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "rotate_left" }}'
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: switch.desk_control_button_4
            state: 'on'
          sequence:
          - service: switch.turn_off
            target:
              entity_id: switch.desk_control_button_4
        default:
        - service: switch.turn_off
          target:
            entity_id:
            - switch.desk_control_button_1
        - delay:
            milliseconds: 250
        - service: switch.turn_on
          target:
            entity_id: switch.desk_control_button_4
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "slide" }}'
      sequence:
      - service: switch.turn_on
        target:
          entity_id: switch.marantz_amp_power
    default: []
- id: marantz
  alias: Marantz
  description: ''
  mode: single
  trigger:
  - platform: state
    entity_id: switch.marantz_amp_power
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: input_boolean.toggle
    target:
      entity_id: input_boolean.marantz_power_state
- id: mirror_desk_height
  alias: Mirror sensor desk height with input number desk height
  description: Insure input_number.desk_height gets updated when desk height changes
    without using the input_number.desk_height entity
  mode: single
  trigger:
  - platform: template
    value_template: "{{\n  states('sensor.desk_control_height') | int != states('input_number.desk_height')
      | int and\n  states('switch.desk_control_button_1') == 'off' and\n  states('switch.desk_control_button_2')
      == 'off' and\n  states('switch.desk_control_button_3') == 'off' and\n  states('switch.desk_control_button_4')
      == 'off' and\n  states('switch.desk_control_button_up') == 'off' and\n  states('switch.desk_control_button_down')
      == 'off'\n}}"
    for: 1
  condition:
  - condition: template
    value_template: "{{\n  states('sensor.desk_control_height') | int != states('input_number.desk_height')
      | int\n}}"
  action:
  - service: automation.turn_off
    target:
      entity_id: automation.desk_height
  - service: input_number.set_value
    target:
      entity_id: input_number.desk_height
    data:
      value: '{{ states(''sensor.desk_control_height'') }}'
  - service: automation.turn_on
    target:
      entity_id: automation.desk_height
- id: office_desk_light_based_on_input_select_scenes
  alias: Office desk light based on input select scenes
  description: ''
  mode: single
  trigger:
  - platform: state
    entity_id:
    - input_select.office_desk_scenes
  condition: []
  action:
  - service: scene.turn_on
    data:
      entity_id: '{{ states(''input_select.office_desk_scenes'') }}'
- id: power_off_server
  alias: Power Off Server
  description: Power Off Server shortly after night mode
  mode: single
  trigger:
  - platform: state
    entity_id: input_select.daytime
    to: Night
    for:
      hours: 0
      minutes: 15
      seconds: 0
  condition:
  - condition: time
    before: 04:30:00
    after: '20:00:00'
  action:
  - service: switch.turn_off
    target:
      entity_id: switch.wake_on_lan_server
- id: office_switch
  alias: Office switch
  description: ''
  mode: queued
  max: 5
  trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: 642b984be9421b3292c2416ee01bf22c
  condition:
  - condition: template
    value_template: "{{\n  trigger.event.data.command in [\n    'single', 'double',
      'hold', 'release',\n  ]\n}}"
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "single" }}'
      sequence:
      - choose:
        - conditions:
          - condition: or
            conditions:
            - condition: state
              entity_id: light.office_ceiling_lights
              state: 'off'
          sequence:
          - service: light.turn_on
            target:
              entity_id: light.office_ceiling_lights
        default:
        - service: light.turn_off
          target:
            entity_id: light.office_ceiling_lights
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "double" }}'
      sequence:
      - service: switch.turn_on
        target:
          entity_id:
          - switch.wake_on_lan_tower
          - switch.desk_switch
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "hold" }}'
      sequence:
      - choose:
        - conditions:
          - condition: or
            conditions:
            - condition: state
              entity_id: light.office_ceiling_lights
              state: 'off'
            - condition: state
              entity_id: light.office_back_light
              state: 'on'
          sequence:
          - service: light.turn_on
            target:
              entity_id:
              - light.office_front_light
          - service: light.turn_off
            target:
              entity_id:
              - light.office_back_light
        default:
        - service: light.turn_on
          target:
            entity_id:
            - light.office_back_light
        - service: light.turn_off
          target:
            entity_id:
            - light.office_front_light
- id: ups_battery_charge_critical
  alias: UPS battery charge critical
  description: ''
  mode: single
  trigger:
  - platform: numeric_state
    entity_id: sensor.apcups_battery_charge
    below: 10
  condition: []
  action:
  - service: hassio.host_shutdown
- id: wake_server
  alias: Wake Server
  description: Wake Server Using WOL When state changes to Morning, Daytimes, or Evening
  mode: single
  trigger:
  - platform: state
    entity_id: input_select.daytime
    to: Morning
  - platform: state
    entity_id: input_select.daytime
    to: Daytimes
  - platform: state
    entity_id: input_select.daytime
    to: Evening
  condition:
  - condition: state
    entity_id: device_tracker.casch
    state: not_home
  action:
  - service: switch.turn_on
    target:
      entity_id: switch.wake_on_lan_server
- id: bedroom_motion
  alias: Bedroom motion
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.bedroom_motion_sensor
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: input_select.daytime
    state: Night
    enabled: true
  - condition: state
    entity_id: light.bedroom_bed_light
    state: 'off'
  - condition: state
    entity_id: input_boolean.presence
    state: 'on'
  - condition: numeric_state
    entity_id: sensor.bedroom_motion_sensor_light_level
    below: 50
  action:
  - service: scene.turn_on
    data:
      entity_id: scene.night_toilet_light
  - delay:
      hours: 0
      minutes: 2
      seconds: 0
      milliseconds: 0
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.bedroom_bed_light
  mode: single
  max_exceeded: silent
- id: bedroom_switch
  alias: Bedroom switch
  description: ''
  trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: c2f9ff81b7a2837879fa8a92a7aa2d8e
  - platform: event
    event_type: zha_event
    event_data:
      device_id: 2ae648159981b31b3bf901fb4ac2a579
  condition:
  - condition: template
    value_template: "{{\n  trigger.event.data.command in [\n    '1_single', '1_double',
      '1_triple', '1_hold',\n    '2_single', '2_double', '2_triple', '2_hold',\n    '3_single',
      '3_double',\n    '4_single', '4_double',\n  ]\n}}"
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "1_single" }}'
      sequence:
      - if:
        - condition: state
          entity_id: light.bedroom_bed_light
          state: 'off'
        then:
        - service: scene.turn_on
          data: {}
          target:
            entity_id: scene.bedroom_bed_white
        else:
        - service: light.turn_off
          data: {}
          target:
            entity_id: light.bedroom_bed_light
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "1_double" }}'
      sequence:
      - service: switch.toggle
        data: {}
        target:
          entity_id: switch.bedroom_shutter_down_relay
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "1_triple" }}'
      sequence:
      - service: switch.turn_on
        target:
          entity_id: switch.fan_speed_switch
        data: {}
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "1_hold" }}'
      sequence:
      - event: zha_event
        event_data:
          device_id: 0157c2c1971568f115955e032e5de269
          command: 1_hold
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "2_single" }}'
      sequence:
      - service: light.toggle
        target:
          entity_id: light.nightstand_christian_light
        data: {}
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "2_double" }}'
      sequence:
      - service: switch.toggle
        data: {}
        target:
          entity_id: switch.bedroom_shutter_up_relay
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "2_triple" }}'
      sequence:
      - service: switch.turn_on
        target:
          entity_id: switch.fan_mist_switch
        data: {}
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "2_hold" }}'
      sequence:
      - service: switch.turn_on
        target:
          entity_id: switch.fan_off_switch
        data: {}
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "3_single" }}'
      sequence:
      - service: light.toggle
        target:
          entity_id: light.nightstand_lights
        data: {}
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == "4_single" }}'
      sequence:
      - service: input_select.select_next
        data:
          cycle: true
        target:
          entity_id: input_select.bedroom_bed_scenes
    default: []
  mode: queued
  max: 5
- id: parlor_low_illuminance
  alias: Parlor low illuminance light
  description: Turn on lights on low natural illumance light.
  trigger:
  - platform: numeric_state
    entity_id: sensor.office_light_sensor_light_level
    below: 70
    for:
      hours: 0
      minutes: 10
      seconds: 0
  - platform: state
    entity_id: person.christian_schwarzgruber
    from: not_home
    to: home
  - platform: state
    entity_id:
    - input_boolean.presence
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.presence
    state: 'on'
  - condition: numeric_state
    entity_id: sensor.office_light_sensor_light_level
    below: 70
  - condition: not
    conditions:
    - condition: state
      entity_id: input_select.daytime
      state: Night
  action:
  - service: scene.turn_on
    data: {}
    target:
      entity_id: scene.kitchen_cabinet_white
  mode: single
  max_exceeded: silent
- id: door_window_open_detection
  alias: Door and window open detection
  description: Send notification when it is cold outside and door/window is too long
    open
  trigger:
  - platform: template
    value_template: '{{ is_state(''binary_sensor.balcony_door_sensor'', ''on'') }}'
    for: '{{ states(''input_number.window_or_door_open'') | int(0) }}'
  - platform: template
    value_template: '{{ is_state(''binary_sensor.bedroom_window_sensor'', ''on'')
      }}'
    for: '{{ states(''input_number.window_or_door_open'') | int(0) }}'
  - platform: template
    value_template: '{{ is_state(''binary_sensor.office_window_sensor'', ''on'') }}'
    for: '{{ states(''input_number.window_or_door_open'') | int(0) }}'
  - platform: template
    value_template: '{{ is_state(''binary_sensor.parlor_window_sensor'', ''on'') }}'
    for: '{{ states(''input_number.window_or_door_open'') | int(0) }}'
  - platform: template
    value_template: '{{ is_state(''binary_sensor.lower_kitchen_window_sensor'', ''on'')
      }}'
    for: '{{ states(''input_number.window_or_door_open'') | int(0) }}'
  - platform: template
    value_template: '{{ is_state(''binary_sensor.upstairs_window_sensor'', ''on'')
      }}'
    for: '{{ states(''input_number.window_or_door_open'') | int(0) }}'
  condition:
  - condition: template
    value_template: '{{ state_attr(''weather.home'', ''temperature'') | float(0.0)
      < 20 }}'
  action:
  - service: notify.notify
    data:
      title: '{{ trigger.to_state.name | replace('' Sensor'', '''') }} Open'
      message: '{% set minutes = (states(''input_number.window_or_door_open'') | int(0)
        / 60) | int(0) %} The {{ trigger.to_state.name | lower | replace('' sensor'',
        '''') }} is already {{ minutes }} {% if minutes > 1 -%} minutes {% else -%}
        minute {% endif %} open.'
  - wait_template: '{{ is_state(''input_boolean.window_or_door_open'', ''off'') }}'
  - service: input_boolean.turn_on
    entity_id: input_boolean.window_or_door_open
  - condition: template
    value_template: '{{ is_state(trigger.entity_id, ''on'') }}'
  - service: scene.create
    data:
      scene_id: door_window_open_detection_kitchen_cabinet_backup
      snapshot_entities:
      - light.kitchen_cabinet_light
  - service: light.turn_on
    data:
      entity_id: light.kitchen_cabinet_light
      rgb_color:
      - 235
      - 40
      - 0
      brightness: 256
  - wait_template: '{{ is_state(trigger.entity_id, ''off'') }}'
  - service: scene.turn_on
    data:
      entity_id: scene.door_window_open_detection_kitchen_cabinet_backup
  - service: input_boolean.turn_off
    entity_id: input_boolean.window_or_door_open
  mode: parallel
  max: 10
- id: reset_window_or_door_open_input_boolean
  alias: Reset window or door open input boolean
  description: ''
  mode: single
  trigger:
  - platform: state
    entity_id: binary_sensor.door_window_sensors
    from: 'on'
    to: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.window_or_door_open
    state: 'on'
  action:
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.window_or_door_open
- id: set_window_or_door_open_time
  alias: Set window or door open time
  description: Automatically sets window or door open time based on outdoor temperature
  mode: single
  trigger:
  - platform: numeric_state
    entity_id: sensor.outdoor_temperature
    above: 25
  - platform: numeric_state
    entity_id: sensor.outdoor_temperature
    above: 20
    below: 25
  - platform: numeric_state
    entity_id: sensor.outdoor_temperature
    above: 15
    below: 20
  - platform: numeric_state
    entity_id: sensor.outdoor_temperature
    above: 10
    below: 15
  - platform: numeric_state
    entity_id: sensor.outdoor_temperature
    above: 5
    below: 10
  - platform: numeric_state
    entity_id: sensor.outdoor_temperature
    below: 5
  condition: []
  action:
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: sensor.outdoor_temperature
        above: 25
      sequence:
      - service: input_number.set_value
        data:
          value: 3600
        target:
          entity_id: input_number.window_or_door_open
    - conditions:
      - condition: numeric_state
        entity_id: sensor.outdoor_temperature
        above: 20
        below: 25
      sequence:
      - service: input_number.set_value
        data:
          value: 28800
        target:
          entity_id: input_number.window_or_door_open
    - conditions:
      - condition: numeric_state
        entity_id: sensor.outdoor_temperature
        above: 15
        below: 20
      sequence:
      - service: input_number.set_value
        data:
          value: 10800
        target:
          entity_id: input_number.window_or_door_open
    - conditions:
      - condition: numeric_state
        entity_id: sensor.outdoor_temperature
        above: 10
        below: 15
      sequence:
      - service: input_number.set_value
        data:
          value: 2700
        target:
          entity_id: input_number.window_or_door_open
    - conditions:
      - condition: numeric_state
        entity_id: sensor.outdoor_temperature
        above: 5
        below: 10
      sequence:
      - service: input_number.set_value
        data:
          value: 900
        target:
          entity_id: input_number.window_or_door_open
    - conditions:
      - condition: numeric_state
        entity_id: sensor.outdoor_temperature
        below: 5
      sequence:
      - service: input_number.set_value
        data:
          value: 600
        target:
          entity_id: input_number.window_or_door_open
    default: []
- id: '1672437340763'
  alias: Bedroom bed light based on input select scenes
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.bedroom_bed_scenes
  condition: []
  action:
  - service: scene.turn_on
    data:
      entity_id: '{{ states(''input_select.bedroom_bed_scenes'') }}'
  mode: single
- id: '1672442241658'
  alias: Wind speed to high for shutters
  description: Move shutters up if wind speed is to high.
  trigger:
  - platform: numeric_state
    entity_id: weather.home
    above: 50
    attribute: wind_speed
  condition: []
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.shutters_up_group
  mode: single
