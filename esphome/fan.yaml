substitutions:
  base_button_name: "Fan Button"

esphome:
  name: fan
  platform: ESP32
  board: esp32dev
  platformio_options:
    platform: espressif32
    board: az-delivery-devkit-v4
    board_build.mcu: esp32
    board_build.f_cpu: 240000000L

wifi:
  ssid: !secret ssid
  password: !secret password
  fast_connect: true


  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Fan Fallback Hotspot"
    password: !secret ap_password

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
api:
  password: !secret password

ota:
  password: !secret password

# deep_sleep:
#   run_duration: 10s
#   sleep_duration: 60s
#   wakeup_pin: 33

switch:
  # id is wire color
  - platform: gpio
    pin:
      number: 33
      mode: OUTPUT
      inverted: true
    id: fan_power
    name: Fan Power
    icon: mdi:power
    # make it a lambda and publish state -- need to use gpio: ... and turn on off that gpio -- see desk_control
    on_turn_on:
      - switch.turn_on: fan_power
      - delay: 50ms
      - switch.turn_off: fan_power
      - logger.log: "Switch turned off!"
#    on_turn_off:
#      - switch.turn_on: fan_power
#      - delay: 50ms
#      - switch.turn_off: fan_power
#      - logger.log: "Switch turned off!"

remote_receiver:
  pin: 32
  dump: all
