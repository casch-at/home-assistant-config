substitutions:
  name: desk-control
  base_button_name: Desk Control Button
  ap_ssid: Desk Control Fallback Hotspot
  ip: 192.168.1.40

# See for reusing: https://esphome.io/guides/configuration-types.html#config-substitutions
esphome:
  <<: !include .board-config-az-delivery-devkit-v4.yaml
  includes:
    - desk_height_sensor.h
  on_boot:
    then:
      - if:
          condition:
            lambda: 'return isnan(id(desk_control_height).state);'
          then:
            - switch.turn_on: red
            - delay: 10ms
            - switch.turn_off: red

<<: !include .base-config.yaml

####
# Section -- Desk Controll
####

# UART2
uart:
  baud_rate: 1000
  rx_pin: 16
  data_bits: 8
  parity: EVEN
  stop_bits: 1
  id: desk_height_uart_bus

# Custom height sensor
sensor:
  ####
  # Desk Control
  ####
  - platform: custom
    lambda: |-
      auto desk_height_sensor = new DeskHeightSensor(id(desk_height_uart_bus));
      App.register_component(desk_height_sensor);
      return {desk_height_sensor};
    sensors:
      id: desk_control_height
      name: Desk Control Height
      unit_of_measurement: cm
      icon: mdi:human-male-height

switch:
  # ID is wire color of "Desk Control 520"
  - platform: gpio
    pin: 32
    id: blue
  - platform: gpio
    pin: 33
    id: green
  - platform: gpio
    pin: 25
    id: yellow
  - platform: gpio
    pin: 26
    id: red

  # Define button
  - platform: template
    id: desk_control_button_1
    name: ${base_button_name} 1
    icon: mdi:numeric-1-circle
    lambda: |-
      if (id(blue).state && !(id(red).state || id(green).state || id(yellow).state)) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - if:
          condition:
            and:
              - switch.is_off: desk_control_button_2
              - switch.is_off: desk_control_button_3
              - switch.is_off: desk_control_button_4
              - switch.is_off: desk_control_button_up
              - switch.is_off: desk_control_button_down
          then:
            - switch.turn_on: blue
            - delay: 12s
            - if:
                condition:
                  switch.is_on: desk_control_button_1
                then:
                  - switch.turn_off: blue
    turn_off_action:
      - switch.turn_off: blue

  - platform: template
    id: desk_control_button_2
    name: ${base_button_name} 2
    icon: mdi:numeric-2-circle
    lambda: |-
      if (id(yellow).state && !(id(red).state || id(green).state || id(blue).state)) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - if:
          condition:
            and:
              - switch.is_off: desk_control_button_1
              - switch.is_off: desk_control_button_3
              - switch.is_off: desk_control_button_4
              - switch.is_off: desk_control_button_up
              - switch.is_off: desk_control_button_down
          then:
            - switch.turn_on: yellow
            - delay: 12s
            - if:
                condition:
                  switch.is_on: desk_control_button_2
                then:
                  - switch.turn_off: yellow
    turn_off_action:
      - switch.turn_off: yellow

  - platform: template
    id: desk_control_button_3
    name: ${base_button_name} 3
    icon: mdi:numeric-3-circle
    lambda: |-
      if (id(yellow).state && id(green).state && !(id(red).state || id(blue).state)) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - if:
          condition:
            and:
              - switch.is_off: desk_control_button_1
              - switch.is_off: desk_control_button_2
              - switch.is_off: desk_control_button_4
              - switch.is_off: desk_control_button_up
              - switch.is_off: desk_control_button_down
          then:
            - switch.turn_on: yellow
            - switch.turn_on: green
            - delay: 12s
            - if:
                condition:
                  switch.is_on: desk_control_button_3
                then:
                  - switch.turn_off: yellow
                  - switch.turn_off: green
    turn_off_action:
      - switch.turn_off: yellow
      - switch.turn_off: green

  - platform: template
    id: desk_control_button_4
    name: ${base_button_name} 4
    icon: mdi:numeric-4-circle
    lambda: |-
      if (id(blue).state && id(green).state && !(id(red).state || id(yellow).state)) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - if:
          condition:
            and:
              - switch.is_off: desk_control_button_1
              - switch.is_off: desk_control_button_2
              - switch.is_off: desk_control_button_3
              - switch.is_off: desk_control_button_up
              - switch.is_off: desk_control_button_down
          then:
            - switch.turn_on: blue
            - switch.turn_on: green
            - delay: 12s
            - if:
                condition:
                  switch.is_on: desk_control_button_4
                then:
                  - switch.turn_off: blue
                  - switch.turn_off: green
    turn_off_action:
      - switch.turn_off: blue
      - switch.turn_off: green

  - platform: template
    id: desk_control_button_up
    name: ${base_button_name} Up
    icon: mdi:arrow-up
    lambda: |-
      if (id(red).state && !(id(blue).state || id(green).state || id(yellow).state)) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - if:
          condition:
            and:
              - switch.is_off: desk_control_button_1
              - switch.is_off: desk_control_button_2
              - switch.is_off: desk_control_button_3
              - switch.is_off: desk_control_button_4
              - switch.is_off: desk_control_button_down
          then:
            - switch.turn_on: red
    turn_off_action:
      - switch.turn_off: red

  - platform: template
    id: desk_control_button_down
    name: ${base_button_name} Down
    icon: mdi:arrow-down
    lambda: |-
      if (id(green).state && !(id(red).state || id(blue).state || id(yellow).state)) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - if:
          condition:
            and:
              - switch.is_off: desk_control_button_1
              - switch.is_off: desk_control_button_2
              - switch.is_off: desk_control_button_3
              - switch.is_off: desk_control_button_4
              - switch.is_off: desk_control_button_up
          then:
            - switch.turn_on: green
    turn_off_action:
      - switch.turn_off: green

  #### Office Marantz
  - platform: template
    id: marantz_amp_power
    name: Marantz AMP Power
    turn_on_action:
      - remote_transmitter.transmit_raw:
          carrier_frequency: 38kHz
          code: [901, -880, 899, -879, 901, -877, 1787, -886, 900, -878, 900, -877, 901, -878, 900, -879, 900, -1763, 901, -880, 1785, -886, 899]

  - platform: template
    id: marantz_volume_up
    name: Marantz Volume Up
    turn_on_action:
      - remote_transmitter.transmit_raw:
          carrier_frequency: 38kHz
          code: [875, -880, 1785, -1796, 1759, -886, 900, -904, 874, -880, 898, -878, 899, -1788, 1761, -885, 900, -902, 875, -880, 898]

  - platform: template
    id: marantz_volume_down
    name: Marantz Volume Down
    turn_on_action:
      - remote_transmitter.transmit_raw:
          carrier_frequency: 38kHz
          code: [878, -901, 1762, -1793, 1763, -907, 878, -900, 877, -900, 877, -899, 878, -1785, 1762, -907, 878, -901, 877, -1786, 877]

  - platform: template
    id: marantz_mute
    name: Marantz Mute
    turn_on_action:
      - remote_transmitter.transmit_raw:
          carrier_frequency: 38kHz
          code: [893, -909, 870, -908, 871, -907, 1757, -914, 871, -907, 870, -908, 870, -908, 871, -907, 871, -1793, 871, -908, 1756, -1801, 870]

  - platform: template
    id: marantz_cd
    name: Marantz CD
    turn_on_action:
      - remote_transmitter.transmit_raw:
          carrier_frequency: 38kHz
          code: [878, -901, 877, -901, 877, -901, 1762, -1793, 1763, -907, 878, -1784, 878, -901, 877, -901, 877, -901, 877, -901, 877, -901, 877]

  - platform: template
    id: marantz_network
    name: Marantz Network
    turn_on_action:
      - remote_transmitter.transmit_raw:
          carrier_frequency: 38kHz
          code: [870, -909, 1757, -1801, 871, -909, 1757, -915, 871, -1795, 871, -4450, 872, -910, 870, -909, 870, -909, 872, -908, 871, -908, 1757, -915, 872, -1793, 1758, -1777, 1781]

  - platform: template
    id: marantz_tune
    name: Marantz Tune
    turn_on_action:
      - remote_transmitter.transmit_raw:
          carrier_frequency: 38kHz
          code: [878, -903, 876, -903, 877, -903, 1762, -910, 876, -903, 876, -1788, 877, -4445, 878, -903, 876, -903, 877, -879, 900, -880, 899, -903, 1762, -910, 876, -1788, 1763, -1795, 1763]

  - platform: template
    id: marantz_source_direct
    name: Marantz Source Direct
    turn_on_action:
      - remote_transmitter.transmit_raw:
          carrier_frequency: 38kHz
          code: [902, -879, 900, -879, 901, -877, 1787, -887, 898, -879, 900, -877, 901, -1764, 1786, -874, 912, -879, 899, -1766, 1784]

### IR Receiver
remote_receiver:
  id: rcvr
  pin:
    number: 12
    inverted: True
    mode: INPUT_PULLUP

### IR Transmit
# https://www.esphome.io/components/remote_transmitter.html
remote_transmitter:
  id: tamtr
  pin: 14
  carrier_duty_percent: 50%
