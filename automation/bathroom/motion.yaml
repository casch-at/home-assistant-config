- id: bathroom_motion
  alias: Bathroom motion
  description: ""
  mode: restart
  trigger:
    - platform: state
      entity_id: binary_sensor.bathroom_motion_sensor
      from: "off"
      to: "on"
  condition:
    - condition: or
      conditions:
        - condition: numeric_state
          entity_id: sensor.bathroom_motion_sensor_light_level
          below: 60
        - condition: template
          value_template: >-
            {% set now = now() | as_timestamp %} {% set last =
            state_attr('automation.bathroom_motion', 'last_triggered') |
            as_timestamp %} {{ ((now - last) / 60 | int) < 6 }}
    - condition: state
      entity_id: input_boolean.bathroom_light_active
      state: "off"
  action:
    - service: input_number.increment
      target:
        entity_id: input_number.bathroom_motion_timeout_multiplier
    - if:
        - condition: or
          conditions:
            - condition: state
              entity_id: input_select.daytime
              state: Daytimes
            - condition: state
              entity_id: input_select.daytime
              state: Morning
      then:
        - service: light.turn_on
          data:
            brightness: >-
              {% if (states('sensor.daytime_light_brightness') | int + 30) >= 254 -%}
                {{ states('sensor.daytime_light_brightness') }}
              {% else -%}
                 {{ states('sensor.daytime_light_brightness') | int + 30 }}
              {% endif %}
            color_temp: "{{ states('sensor.daytime_light_color_temp') }}"
          target:
            entity_id: light.bathroom_lights
      else:
        - service: light.turn_on
          data:
            brightness: >-
              {% if (states('sensor.daytime_light_brightness') | int + 30) >= 254 -%}
                {{ states('sensor.daytime_light_brightness') }}
              {% else -%}
                 {{ states('sensor.daytime_light_brightness') | int + 30 }}
              {% endif %}
            color_temp: "{{ states('sensor.daytime_light_color_temp') }}"
          target:
            entity_id: light.bathroom_ceiling_lights

    - wait_for_trigger:
        platform: state
        entity_id: binary_sensor.bathroom_motion_sensor
        from: "on"
        to: "off"
        for: |-
          {{
            (states('input_number.motion_timeout') | int)
              *
            (states('input_number.bathroom_motion_timeout_multiplier') | int)
          }}
    - condition: state
      entity_id: input_boolean.bathroom_light_active
      state: "off"
    - service: light.turn_off
      target:
        entity_id: light.bathroom_lights
    - service: input_number.set_value
      target:
        entity_id: input_number.bathroom_motion_timeout_multiplier
      data:
        value: 0
