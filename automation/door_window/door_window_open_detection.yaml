- id: door_window_open_detection
  alias: Door and window open detection
  description: Send notification when it is cold outside and door/window is too long open
  trigger:
  - platform: template
    value_template: "{{ is_state('binary_sensor.balcony_door_sensor', 'on') }}"
    for: "{{ states('input_number.window_or_door_open') | int(0) }}"
  - platform: template
    value_template: "{{ is_state('binary_sensor.bedroom_window_sensor', 'on') }}"
    for: "{{ states('input_number.window_or_door_open') | int(0) }}"
  - platform: template
    value_template: "{{ is_state('binary_sensor.office_window_sensor', 'on') }}"
    for: "{{ states('input_number.window_or_door_open') | int(0) }}"
  - platform: template
    value_template: "{{ is_state('binary_sensor.parlor_window_sensor', 'on') }}"
    for: "{{ states('input_number.window_or_door_open') | int(0) }}"
  - platform: template
    value_template: "{{ is_state('binary_sensor.lower_kitchen_window_sensor', 'on') }}"
    for: "{{ states('input_number.window_or_door_open') | int(0) }}"
  - platform: template
    value_template: "{{ is_state('binary_sensor.upstairs_window_sensor', 'on') }}"
    for: "{{ states('input_number.window_or_door_open') | int(0) }}"
  condition:
  - condition: template
    value_template: "{{ state_attr('weather.home', 'temperature') | float < 20 }}"
  action:
  - service: notify.notify
    data:
      title: "{{ trigger.to_state.name | replace(' Sensor', '') }} Open"
      message: >-
        {% set minutes = (states('input_number.window_or_door_open') | int(0) / 60) | int(0) %}
        The {{ trigger.to_state.name | lower | replace(' sensor', '') }}
        is already {{ minutes }} {% if minutes > 1 -%} minutes {% else -%} minute {% endif %}
        open.
  - wait_template: "{{ is_state('input_boolean.window_or_door_open', 'off') }}"
  - service: input_boolean.turn_on
    entity_id: input_boolean.window_or_door_open
  - condition: template
    value_template: "{{ is_state(trigger.entity_id, 'on') }}"
  - service: scene.create
    data:
      scene_id: door_window_open_detection_stairs_backup
      snapshot_entities:
      - light.stairs_light
  - service: light.turn_on
    data:
      entity_id: light.stairs_light
      rgb_color: [235, 40, 0]
      brightness: 256
  - wait_template: "{{ is_state(trigger.entity_id, 'off') }}"
  - service: scene.turn_on
    data:
      entity_id: scene.door_window_open_detection_stairs_backup
  - service: input_boolean.turn_off
    entity_id: input_boolean.window_or_door_open
  mode: parallel
  max: 10
