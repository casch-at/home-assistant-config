- id: daytime
  alias: Set daytime
  description: ''
  trigger:
  - platform: template
    #  - 24 * 60 * 60 -> use previous date alarm, otherwise we miss the event
    value_template: >-
      {{
      not is_state('sensor.huawei_p20_next_alarm', 'unavailable')
      and (as_timestamp(states('sensor.huawei_p20_next_alarm')) - 24 * 60 * 60) | timestamp_custom('%F, %H:%M')
      == as_timestamp(states('sensor.date_time_iso')) | timestamp_custom('%F, %H:%M')
      or not is_state('sensor.galaxy_a2_next_alarm', 'unavailable')
      and (as_timestamp(states('sensor.galaxy_a2_next_alarm')) - 24 * 60 * 60) | timestamp_custom('%F, %H:%M')
      == as_timestamp(states('sensor.date_time_iso')) | timestamp_custom('%F, %H:%M')
      }}
  - platform: time
    at: '18:00:00'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.entity_id == "sensor.date_time_iso" }}'
      - condition: state
        entity_id: input_select.daytime
        state: 'Night'
      - condition: state
        entity_id: input_boolean.presence
        state: 'on'
      sequence:
      - service: input_select.select_option
        entity_id: input_select.daytime
        data:
          option: Morning
    default: []
  - choose:
    - conditions:
      - condition: time
        before: '18:05:00'
        after: '17:55:00'
      sequence:
      - service: input_select.select_option
        entity_id: input_select.daytime
        data:
          option: Evening
    default: []
  mode: single
